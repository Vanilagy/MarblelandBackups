// NORMAL AND SPEC MAPS

// @include "~/data/interiors_bm/shaders_bm/bm_beam.normal.png"
// @include "~/data/interiors_bm/shaders_bm/bm_beam.spec.png"

// @include "~/data/interiors_bm/shaders_bm/bm_edge_white.normal.png"
// @include "~/data/interiors_bm/shaders_bm/bm_edge_white.spec.png"

// @include "~/data/interiors_bm/shaders_bm/bm_friction_bounce_med.spec.png"
// @include "~/data/interiors_bm/shaders_bm/bm_friction_bounce_high.normal.png"
// @include "~/data/interiors_bm/shaders_bm/bm_friction_bounce_high.spec.png"
// @include "~/data/interiors_bm/shaders_bm/bm_friction_bounce_low.normal.png"
// @include "~/data/interiors_bm/shaders_bm/bm_friction_bounce_low.spec.png"
// @include "~/data/interiors_bm/shaders_bm/bm_friction_bounce_med.normal.png"

// @include "~/data/interiors_bm/shaders_bm/bm_friction_grass.normal.png"
// @include "~/data/interiors_bm/shaders_bm/bm_friction_grass.spec.png"
// @include "~/data/interiors_bm/shaders_bm/bm_friction_sand.normal.png"
// @include "~/data/interiors_bm/shaders_bm/bm_friction_sand.spec.png"

// @include "~/data/interiors_bm/shaders_bm/bm_grid_blank4.normal.png"
// @include "~/data/interiors_bm/shaders_bm/bm_grid_blank4.spec.png"

// @include "~/data/interiors_bm/shaders_bm/bm_stripe_caution2.spec.png"

// @include "~/data/interiors_bm/shaders_bm/bm_tile08_B.normal.png"
// @include "~/data/interiors_bm/shaders_bm/bm_tile08_B.spec.png"

// @include "~/data/interiors_bm/shaders_bm/bm_trim.spec.png"

// @include "~/data/interiors_bm/shaders_bm/bm_wood.spec.png"
// @include "~/data/interiors_bm/shaders_bm/bm_wood.normal.png"

// @include "~/data/interiors_bm/shaders_bm/solid_bm.spec.png"
// @include "~/data/interiors_bm/shaders_bm/button_bm.spec.png"
// @include "~/data/interiors_bm/shaders_bm/metal_bm.spec.png"
// @include "~/data/interiors_bm/shaders_bm/solid_bm_black.spec.png"

// CUSTOM SKINS FOR SHAPES

// @include "~/data/shapes_bm/hazards/Propellers/Propeller.png"
// @include "~/data/shapes_bm/hazards/Propellers/base.Propeller.png"
// @include "~/data/shapes_bm/hazards/Propellers/bm.Propeller.png"

// @include "~/data/shapes_bm/images/bm_gate_shock.png"
// @include "~/data/shapes_bm/images/bm_gate_bounce.png"
// @include "~/data/shapes_bm/images/bm_gate_gyro.png"

// @include "~/data/shapes_bm/LumiCube/solid_bm_blue.png"
// @include "~/data/shapes_bm/LumiCube/metal_bm.png"

// @include "~/data/shapes_bm/pads/endpad_bm_edge.png"
// @include "~/data/shapes_bm/pads/exit.png"
// @include "~/data/shapes_bm/pads/metal_bm.png"
// @include "~/data/shapes_bm/pads/sigiloff.png"
// @include "~/data/shapes_bm/pads/sigilon.png"
// @include "~/data/shapes_bm/pads/spawn.png"
// @include "~/data/shapes_bm/pads/blue.jpg"
// @include "~/data/shapes_bm/pads/green.jpg"
// @include "~/data/shapes_bm/pads/red.jpg"
// @include "~/data/shapes_bm/pads/white.jpg"
// @include "~/data/shapes_bm/pads/button_bm.png"
// @include "~/data/shapes_bm/pads/endgate_bm.png"
// @include "~/data/shapes_bm/pads/endpad_bm_base.png"

// @include "~/data/shapes_bm/powerups/bm_powerup_shock.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_speed.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_white.png"
// @include "~/data/shapes_bm/powerups/metal_bm.png"
// @include "~/data/shapes_bm/powerups/1.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/2.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/3.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/4.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/5.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/6.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/7.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/8.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/9.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/10.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/base.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/bm_gate_anvil.png"
// @include "~/data/shapes_bm/powerups/bm_gate_bounce.png"
// @include "~/data/shapes_bm/powerups/bm_gate_gravity.png"
// @include "~/data/shapes_bm/powerups/bm_gate_gyro.png"
// @include "~/data/shapes_bm/powerups/bm_gate_jump.png"
// @include "~/data/shapes_bm/powerups/bm_gate_shock.png"
// @include "~/data/shapes_bm/powerups/bm_gate_speed.png"
// @include "~/data/shapes_bm/powerups/bm_gate_time.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_anvil.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_black.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_bounce.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_gray.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_gyro.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_jump.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_mega.png"

// @include "~/data/shapes_bm/scenery/metal_bm.png"
// @include "~/data/shapes_bm/scenery/solid_bm.png"
// @include "~/data/shapes_bm/scenery/base.glass.png"
// @include "~/data/shapes_bm/scenery/bm_lamp.png"
// @include "~/data/shapes_bm/scenery/bm_lineglow_auto.png"
// @include "~/data/shapes_bm/scenery/bm_lineglow_manual.png"
// @include "~/data/shapes_bm/scenery/bm_marker_light_auto.png"
// @include "~/data/shapes_bm/scenery/bm_marker_light_manual.png"
// @include "~/data/shapes_bm/scenery/bm_scenery_black.png"
// @include "~/data/shapes_bm/scenery/button_bm.png"

// @include "~/data/shapes_bm/signs/solid_bm.png"
// @include "~/data/shapes_bm/signs/checkpoint_bm.png"
// @include "~/data/shapes_bm/signs/finish_bm.png"
// @include "~/data/shapes_bm/signs/hazard_bm.png"
// @include "~/data/shapes_bm/signs/metal_bm.png"

// CHECKPOINT

datablock StaticShapeData(Checkpoint_BM : checkPoint) {
	shapeFile = "~/data/shapes_bm/pads/checkpad.dts";
};

function Checkpoint_BM::onMissionReset(%this, %obj) {
	if (!$Game::Menu) {
		%obj.setThreadDir(0,false);
	}
}

function Checkpoint_BM::onActivateCheckpoint(%this, %obj) {
	if (!$Game::Menu) {
		%obj.setThreadDir(0,false);
	}
}

// PROPELLERS

datablock StaticShapeData(PropLarge1_BM : Propeller) {
	shapeFile = "~/data/shapes_bm/hazards/Propellers/Propeller_large_1.dts";
	forceStrength[0] = 0;     // Force to apply
	forceRadius[0] = 0;       // Max radius
	forceArc[0] = 0;         // Cos angle
	skin[0] = "base";
	skin[1] = "bm";
};

datablock StaticShapeData(PropLarge2_BM : Propeller) {
	shapeFile = "~/data/shapes_bm/hazards/Propellers/Propeller_large_2.dts";
	forceStrength[0] = 0;
	forceRadius[0] = 0;
	forceArc[0] = 0;
	skin[0] = "base";
	skin[1] = "bm";
};

datablock StaticShapeData(PropLarge3_BM : Propeller) {
	shapeFile = "~/data/shapes_bm/hazards/Propellers/Propeller_large_3.dts";
	forceStrength[0] = 0;
	forceRadius[0] = 0;
	forceArc[0] = 0;
	skin[0] = "base";
	skin[1] = "bm";
};

datablock StaticShapeData(PropLarge4_BM : Propeller) {
	shapeFile = "~/data/shapes_bm/hazards/Propellers/Propeller_large_4.dts";
	forceStrength[0] = 0;
	forceRadius[0] = 0;
	forceArc[0] = 0;
	skin[0] = "base";
	skin[1] = "bm";
};

datablock StaticShapeData(PropLarge5_BM : Propeller) {
	shapeFile = "~/data/shapes_bm/hazards/Propellers/Propeller_large_5.dts";
	forceStrength[0] = 0;
	forceRadius[0] = 0;
	forceArc[0] = 0;
	skin[0] = "base";
	skin[1] = "bm";
};

// HELP BUBBLE

datablock StaticShapeData(HelpBubble_BM : HelpBubble) {
	className = "LevelParts";
	category = "Help";
	shapeFile = "platinum/data/shapes_bm/signs/bm_hintscreen.dts";

	customField[0, "field"  ] = "text";
	customField[0, "type"   ] = "string";
	customField[0, "name"   ] = "Help Text";
	customField[0, "desc"   ] = "Text that is shown to the player when they enter the trigger.";
	customField[0, "default"] = "Help Text";
	customField[1, "field"  ] = "displayonce";
	customField[1, "type"   ] = "boolean";
	customField[1, "name"   ] = "Only Display Once";
	customField[1, "desc"   ] = "If the trigger should only show once (resets on restart).";
	customField[1, "default"] = "0";
	customField[2, "field"  ] = "persistTime";
	customField[2, "type"   ] = "time";
	customField[2, "name"   ] = "Persist Time";
	customField[2, "desc"   ] = "For how long the help message will be visible after entering the trigger.";
	customField[2, "default"] = "5000";
	customField[3, "field"  ] = "extended";
	customField[3, "type"   ] = "boolean";
	customField[3, "name"   ] = "Use Extended Help";
	customField[3, "desc"   ] = "If the extended help dialog should be used instead.";
	customField[3, "default"] = "0";
	customField[4, "field"  ] = "disable";
	customField[4, "type"   ] = "boolean";
	customField[4, "name"   ] = "Disabled";
	customField[4, "desc"   ] = "If the help bubble is disabled (for use with a trigger).";
	customField[4, "default"] = "0";
	customField[5, "field"  ] = "triggerRadius";
	customField[5, "type"   ] = "float";
	customField[5, "name"   ] = "Active Radius";
	customField[5, "desc"   ] = "Will only show when marble is within this distance.";
	customField[5, "default"] = "3";
};

// END PAD

datablock StaticShapeData(EndPad_BM : EndPad) {
	shapeFile = "~/data/shapes_bm/pads/endpadcore_bm.dts";
	
	skinCount = 0;
};

datablock StaticShapeData(EndPad_BMGate : EndPad) {
	shapeFile = "~/data/shapes_bm/pads/endgate_bm.dts";
	
	skinCount = 0;
};

// POWERUPS

datablock ShapeBaseImageData(ActualHelicopterImage) {
	// Basic Item properties
	shapeFile = "~/data/shapes_bm/images/glow_gyro.dts";
	emap = true;
	mountPoint = 3;
	offset = "0 0 0";
	stateName[0]                     = "glow";
	stateSequence[0]                 = "glow";
//   stateName[0]                     = "Ambient";
//   stateSequence[0]                 = "ambient";
	stateSound[0] = HelicopterLoopSfx;
	ignoreMountRotation = true;
};

datablock ShapeBaseImageData(MegaHelicopterImage : ActualHelicopterImage) {
	shapeFile = "~/data/shapes_bm/images/glow_megagyro.dts";
};

datablock ItemData(HelicopterItem_BM : HelicopterItem) {
	superCategory = "PowerUps";
	category = "Blasted";

	shapeFile = "~/data/shapes_bm/Powerups/Gyrocopter_bm.dts";
	image = HelicopterImage_BM;
	megaImage = MegaHelicopterImage_BM;
};

datablock ItemData(HelicopterItem_BMGate : HelicopterItem) {
	superCategory = "PowerUps";
	category = "Blasted";
	
	shapeFile = "~/data/shapes_bm/Powerups/GyrocopterGate_bm.dts";
	image = HelicopterImage_BM;
};

datablock ShapeBaseImageData(HelicopterImage_BM : ActualHelicopterImage) {
	superCategory = "PowerUps";
	category = "Blasted";
	
	shapeFile = "~/data/shapes_bm/images/glow_gyro.dts";
	mountPoint = 0;
    offset = "0 0 0";
    stateName[0] = "glow";
    stateSequence[0] = "glow";
};

datablock ShapeBaseImageData(MegaHelicopterImage_BM : ActualHelicopterImage) {
	shapeFile = "~/data/shapes_BM/images/glow_megagyro.dts";
};

datablock ItemData(TimeTravelItem5Sec_BM : TimeTravelItem) {
	superCategory = "PowerUps";
	category = "Blasted";
	
	shapeFile = "~/data/shapes_bm/Powerups/TimeTravel5Sec_bm.dts";
};

datablock ItemData(TimeTravelItem10Sec_BM : TimeTravelItem) {
	superCategory = "PowerUps";
	category = "Blasted";
	
	shapeFile = "~/data/shapes_bm/Powerups/TimeTravel10Sec_bm.dts";
};

function TimeTravelItem::onPickup(%this,%obj,%user,%amount) {
    %ret = $LB::LoggedIn || $Server::Dedicated;
    if (%ret && $platform $= "windows") {
        anticheatDetect(); // This shit aint exist on mac lmaoo
    }
    if (!Parent::onPickup(%this, %obj, %user, %amount)) {
        return false;
    }

    if (!Mode::callback("shouldAllowTTs", true)) {
        return false;
    }
  
  %bonus = (%obj.timeBonus $= "" ? $Game::TimeTravelBonus : %obj.timeBonus);
  %color = (%bonus == 0 ? %this.grayMessageColor : %this.messageColor);
  %sign = (Mode::callback("timeMultiplier", 1) > 0 ? "-" : "+");
  
  if(%obj.instant) {
    %newTime = $Time::CurrentTime - %bonus;
    if(%newTime < 0) {
      %bonus = $Time::CurrentTime;
      $Time::TotalBonus += %bonus;
      $Time::CurrentTime = 0;
    }
    else {
      $Time::CurrentTime = %newTime;
      $Time::TotalBonus += %bonus;
    }
    PlayGui.adjustTimer(-%bonus);
  }
  else {
    if (%bonus > 0)
      %user.client.incBonusTime(%bonus);
    
    commandToAll('UpdateTimeTravelCountdown'); // main_gi v4.2.3
  }

    //Show a message
    %user.client.displayGemMessage(%sign @(%bonus / 1000) @ "s", %color);
    
    return true;
}

function TimeTravelItem5Sec_BM::onAdd(%this, %obj) 
{	
	%obj.playThread(0, "minute");
	%obj.playThread(1, "hour");

	return TimeTravelItem::onAdd(%this, %obj);
}
function TimeTravelItem5Sec_BM::onPickup(%this,%obj,%user,%amount) {
	return TimeTravelItem::onPickup(%this, %obj, %user, %amount);
}
function TimeTravelItem10Sec_BM::onAdd(%this, %obj) 
{	
	%obj.playThread(0, "minute");
	%obj.playThread(1, "hour");

	return TimeTravelItem::onAdd(%this, %obj);
}
function TimeTravelItem10Sec_BM::onPickup(%this,%obj,%user,%amount) {
	return TimeTravelItem::onPickup(%this, %obj, %user, %amount);
}

//-----------------------------------------------------------------------------

datablock ItemData(LumiCube : EasterEgg) {
	superCategory = "PowerUps";
	category = "Blasted";	// This should be put in a new category
	className = "PowerUp";	// Ditto

	// Basic Item properties
	shapeFile = "~/data/shapes_bm/LumiCube/LumiCube.dts";
	mass = 1;
	friction = 1;
	elasticity = 0.3;
	emap = false;

	displayName = "LumiCube";

	// Dynamic properties defined by the scripts
	noRespawn = true;
	maxInventory = 1;
	noPickupMessage = true;
};

function LumiCube::onPickup(%this,%obj,%user,%amount) {
	return EasterEgg::onPickup(%this, %obj, %user, %amount);
}

// SCENERY
datablock StaticShapeData(Glass_BM : Window01) {
	shapeFile = "~/data/shapes_bm/scenery/bm_glass.dts";
};

datablock StaticShapeData(GlassSlope_BM : Window01) {
	shapeFile = "~/data/shapes_bm/scenery/bm_glass_slope.dts";
};

datablock StaticShapeData(EndPadEdge_BM) {
	className = "EndPadEdge";
	superCategory = "Pads";
	category = "Blasted";
	shapeFile = "~/data/shapes_bm/pads/endpadedge_bm.dts";
};

datablock StaticShapeData(EndGatePole_BM) {
	className = "EndGatePole";
	superCategory = "Pads";
	category = "Blasted";
	shapeFile = "~/data/shapes_bm/pads/endgatepole_bm.dts";
};

datablock StaticShapeData(Propeller_BM_Base) {
	className = "LevelParts";
	superCategory = "Level Parts";
	category = "Propeller Base";
	shapeFile = "~/data/shapes_bm/hazards/Propellers/bm_propeller_base.dts";
};

//SIGNS

datablock StaticShapeData(Sign_BM : Sign) {
	// Mission editor category
	superCategory = "Scenery";
	category = "Signs BM";
	className = "Sign";

	// Basic Item properties
	shapeFile = "~/data/shapes_bm/signs/bm_sign.dts";
	mass = 1;
	friction = 1;
	elasticity = 0.3;
};

datablock StaticShapeData(SignDown_BM : Sign) {
	// Mission editor category
	superCategory = "Scenery";
	category = "Signs BM";
	className = "Sign";

	// Basic Item properties
	shapeFile = "~/data/shapes_bm/signs/bm_signdown.dts";
	mass = 1;
	friction = 1;
	elasticity = 0.3;
};

datablock StaticShapeData(SignNight_BM : Sign) {
	// Mission editor category
	superCategory = "Scenery";
	category = "Signs BM";
	className = "Sign";

	// Basic Item properties
	shapeFile = "~/data/shapes_bm/signs/bm_sign_night.dts";
	mass = 1;
	friction = 1;
	elasticity = 0.3;
};

datablock StaticShapeData(SignDownNight_BM : Sign) {
	// Mission editor category
	superCategory = "Scenery";
	category = "Signs BM";
	className = "Sign";

	// Basic Item properties
	shapeFile = "~/data/shapes_bm/signs/bm_signdown_night.dts";
	mass = 1;
	friction = 1;
	elasticity = 0.3;
};

// FRICTION PROPERTIES
new MaterialProperty(BMGrassMaterial) {
	friction = 1.5;
	restitution = 0.5;
};

new MaterialProperty(BMSandMaterial) {
	friction = 5;
	restitution = 0.05;
};

new MaterialProperty(BMHighBouncyMaterial) {
	friction = 1;
	restitution = 2;
	force = 20;
};
new MaterialProperty(BMMedBouncyMaterial) {
	friction = 1;
	restitution = 2;
	force = 15;
};
new MaterialProperty(BMLowBouncyMaterial) {
	friction = 1;
	restitution = 2;
	force = 10;
};

addMaterialMapping("bm_friction_grass" , BMGrassMaterial);
addMaterialMapping("bm_friction_sand" , BMSandMaterial);
addMaterialMapping("bm_friction_bounce_high" , BMHighBouncyMaterial);
addMaterialMapping("bm_friction_bounce_med" , BMMedBouncyMaterial);
addMaterialMapping("bm_friction_bounce_low" , BMLowBouncyMaterial);

//--- OBJECT WRITE BEGIN ---
new SimGroup(MissionGroup) {

   new ScriptObject(MissionInfo) {
         CustomRadarRule = "0";
         artist = "James C.";
         awesomeTime = "15000";
         desc = "Your journey, your way.";
         game = "Blasted";
         gameMode = "null";
         goldTime = "30000";
         level = "6";
         name = "1-6: Non-Linear";
         platinumTime = "25000";
         type = "Custom";
         ultimateTime = "20000";
   };
   new SimGroup(HelpBubbleGroup) {

      new StaticShape(Aviator) {
         position = "1 47 1.5";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "HelpBubble_BM";
            disable = "0";
            displayonce = "0";
            extended = "1";
            persistTime = "1000";
            text = "Grab the Aviator and use it to fly in the air.";
            triggerRadius = "3";
      };
      new StaticShape(BouncyFloor) {
         position = "1 91 -5";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "HelpBubble_BM";
            disable = "0";
            displayonce = "0";
            extended = "1";
            persistTime = "1000";
            text = "The bouncy floor lets you bounce at different heights. Bouncy floors come in three colors. Blue ones have low strength, green ones have medium strength, and yellow ones have high strength.";
            triggerRadius = "3";
      };
   };
   new StaticShape() {
      position = "16 164 20";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "Propeller_BM_Base";
   };
   new SimGroup(MissionData) {

      new MissionArea(MissionArea) {
         area = "-360 -648 720 1296";
         flightCeiling = "300";
         flightCeilingRange = "20";
            locked = "true";
      };
      new Sky(Sky) {
         position = "0 0 0";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         cloudHeightPer[0] = "0";
         cloudHeightPer[1] = "0";
         cloudHeightPer[2] = "0";
         cloudSpeed1 = "0.0001";
         cloudSpeed2 = "0.0002";
         cloudSpeed3 = "0.0003";
         visibleDistance = "500";
         useSkyTextures = "1";
         renderBottomTexture = "1";
         SkySolidColor = "0.600000 0.600000 0.600000 1.000000";
         fogDistance = "300";
         fogColor = "0.600000 0.600000 0.600000 1.000000";
         fogVolume1 = "-1 7.45949e-031 1.3684e-038";
         fogVolume2 = "-1 1.07208e-014 8.756e-014";
         fogVolume3 = "-1 5.1012e-010 2.05098e-008";
         materialList = "~/data/skies_bm/Day/sky_day.dml";
         windVelocity = "1 0 0";
         windEffectPrecipitation = "0";
         noRenderBans = "1";
         fogVolumeColor1 = "128.000000 128.000000 128.000000 0.000000";
         fogVolumeColor2 = "128.000000 128.000000 128.000000 0.000004";
         fogVolumeColor3 = "128.000000 128.000000 128.000000 14435505.000000";
      };
   };
   new Item() {
      position = "1 118 -12.2";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "LumiCube";
      collideable = "0";
      static = "1";
      rotate = "1";
         noRespawn = "0";
   };
   new Sun() {
      direction = "-0.48795 0 -0.872872";
      color = "1.000000 1.000000 1.000000 1.000000";
      ambient = "0.500000 0.500000 0.600000 1.000000";
   };
   new SimGroup(PathNodeGroup) {

      new StaticShape(CameraPath1) {
         position = "-27.3458 7.29039 17.531";
         rotation = "0.50954 -0.206096 0.8354 51.6697";
         scale = "1 1 1";
         dataBlock = "PathNode";
            FinalRotOffset = "1 0 0 0";
            RotationMultiplier = "1";
            Smooth = "0";
            SmoothEnd = "0";
            SmoothStart = "0";
            Spline = "0";
            bezier = "0";
            branchNodes = " ";
            delay = "0";
            nextNode = "CameraPath1";
            placed = "1";
            reverseRotation = "0";
            speed = "0";
            timeToNext = "3000";
            usePosition = "1";
            useRotation = "1";
            useScale = "0";
      };
   };
   new InteriorInstance() {
      position = "0 0 0";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_bm/chapter1/NonLinearNew.dif";
      showTerrainInside = "0";
   };
   new InteriorInstance() {
      position = "0 12 0";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_bm/chapter1/NonLinearCurve3.dif";
      showTerrainInside = "0";
   };
   new InteriorInstance() {
      position = "0 0 0";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_bm/chapter1/NonLinearNewCurve1.dif";
      showTerrainInside = "0";
   };
   new InteriorInstance() {
      position = "0 0 -3.25";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_bm/chapter1/NonLinearNewCurve2.dif";
      showTerrainInside = "0";
   };
   new Trigger() {
      position = "0.5 1.5 -0.5";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "SpawnTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
         center = "1";
         gravity = "0";
   };
   new Item() {
      position = "1 51 -3.621e-008";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "HelicopterItem_BM";
      collideable = "0";
      static = "1";
      rotate = "1";
   };
   new Item() {
      position = "1 113 -0.5";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "HelicopterItem_BM";
      collideable = "0";
      static = "1";
      rotate = "1";
   };
   new Item() {
      position = "-7 62 -10.5";
      rotation = "0 0 1 90.0002";
      scale = "1 1 1";
      dataBlock = "HelicopterItem_BM";
      collideable = "0";
      static = "1";
      rotate = "1";
   };
   new Item() {
      position = "23.75 104 4";
      rotation = "0 0 1 90.0002";
      scale = "1 1 1";
      dataBlock = "HelicopterItem_BM";
      collideable = "0";
      static = "1";
      rotate = "1";
   };
   new Item() {
      position = "-16.5 121 7.1";
      rotation = "0 0 1 22.5";
      scale = "1 1 1";
      dataBlock = "HelicopterItem_BM";
      collideable = "0";
      static = "1";
      rotate = "1";
         noRespawn = "0";
         showHelpOnPickup = "0";
   };
   new InteriorInstance() {
      position = "0 12 0";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_bm/chapter1/NonLinearNewCurve2B.dif";
      showTerrainInside = "0";
   };
   new Item() {
      position = "1 181 3.5";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "HelicopterItem_BM";
      collideable = "0";
      static = "1";
      rotate = "1";
   };
   new StaticShape() {
      position = "-20 92 6";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "Propeller_BM_Base";
   };
   new StaticShape() {
      position = "-20 88 6";
      rotation = "0 0 1 180";
      scale = "1 1 1";
      dataBlock = "PropLarge1_BM";
   };
   new StaticShape() {
      position = "18 26 10";
      rotation = "0 0 1 180";
      scale = "1 1 1";
      dataBlock = "PropLarge1_BM";
   };
   new StaticShape() {
      position = "18 30 10";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "Propeller_BM_Base";
   };
   new Trigger(Bounds) {
      position = "-36.9297 -19 -18.5";
      rotation = "1 0 0 0";
      scale = "88.7042 241.5 109";
      dataBlock = "InBoundsTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
   };
   new StaticShape() {
      position = "16 160 20";
      rotation = "0 0 1 180";
      scale = "1 1 1";
      dataBlock = "PropLarge1_BM";
   };
   new Item() {
      position = "1 158 1.5";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "TimeTravelItem5Sec_BM";
      collideable = "0";
      static = "1";
      rotate = "1";
         instant = "5000";
         noRespawn = "0";
         skin = "base";
         timeBonus = "5000";
   };
   new Item() {
      position = "34.5 84 7.5";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "TimeTravelItem5Sec_BM";
      collideable = "0";
      static = "1";
      rotate = "1";
         instant = "5000";
         noRespawn = "0";
         skin = "base";
         timeBonus = "5000";
   };
   new Item() {
      position = "-12.25 40.75 -5.75";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "TimeTravelItem5Sec_BM";
      collideable = "0";
      static = "1";
      rotate = "1";
         instant = "5000";
         noRespawn = "0";
         skin = "base";
         timeBonus = "5000";
   };
   new Trigger(CheckP2B) {
      position = "-3 157 13";
      rotation = "1 0 0 0";
      scale = "8 8 8";
      dataBlock = "CheckpointTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
         gravity = "1";
         respawnPoint = "Check2B";
   };
   new Trigger(CheckP2A) {
      position = "-3 151 3.5";
      rotation = "1 0 0 0";
      scale = "8 8 8";
      dataBlock = "CheckpointTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
         gravity = "1";
         respawnPoint = "Check2A";
   };
   new Item() {
      position = "0.75 165 13.75";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "TimeTravelItem10Sec_BM";
      collideable = "0";
      static = "1";
      rotate = "1";
         instant = "10000";
         noRespawn = "0";
         skin = "base";
         timeBonus = "10000";
   };
   new InteriorInstance() {
      position = "-14.5 200 6.25";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_bm/chapter1/NonLinearCurve4.dif";
      showTerrainInside = "0";
   };
   new InteriorInstance() {
      position = "0 0 0";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_bm/chapter1/NonLinearCurve5.dif";
      showTerrainInside = "0";
   };
   new StaticShape(EndPoint) {
      position = "1 199 7.5";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "EndPad_BM";
   };
   new StaticShape() {
      position = "1 199 7.5";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "EndPadEdge_BM";
   };
   new StaticShape(Check2B) {
      position = "1 153 13.01";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "Checkpoint_BM";
         chkcollide = "1";
         disableOOB = "0";
         gravity = "1";
   };
   new StaticShape(Check2A) {
      position = "1 147 3.51";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "Checkpoint_BM";
         chkcollide = "1";
         disableOOB = "0";
         gravity = "1";
   };
   new StaticShape(check1) {
      position = "1 79 -6.49";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "Checkpoint_BM";
         chkcollide = "1";
         disableOOB = "0";
         gravity = "1";
   };
   new TSStatic() {
      position = "1 79 -2.65";
      rotation = "1 0 0 0";
      scale = "0.7 0.7 0.7";
      shapeName = "~/data/shapes_bm/signs/bm_checkpointsign.dts";
   };
   new TSStatic() {
      position = "1 147 7.35";
      rotation = "1 0 0 0";
      scale = "0.7 0.7 0.7";
      shapeName = "~/data/shapes_bm/signs/bm_checkpointsign.dts";
   };
   new TSStatic() {
      position = "1 153 16.85";
      rotation = "1 0 0 0";
      scale = "0.7 0.7 0.7";
      shapeName = "~/data/shapes_bm/signs/bm_checkpointsign.dts";
   };
   new TSStatic() {
      position = "1 199 11.35";
      rotation = "1 0 0 0";
      scale = "0.7 0.7 0.7";
      shapeName = "~/data/shapes_bm/signs/bm_finishsign.dts";
   };
   new Trigger(CheckP1) {
      position = "-3 83 -6.5";
      rotation = "1 0 0 0";
      scale = "8 8 8";
      dataBlock = "CheckpointTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
         gravity = "1";
         respawnPoint = "Check1";
   };
};
//--- OBJECT WRITE END ---
