//--- OBJECT WRITE BEGIN ---
new SimGroup(MissionGroup) {

   new ScriptObject(MissionInfo) {
         desc = "Learn how obtuse angles can be a help to a marble.";
         startHelpText = "The slanted parts of the angle can help you roll faster.";
         goldTime = "28000";
         type = "Template";
         level = "512";
         music = "Astrolabe.ogg";
         UltimateTime = "20000";
         name = "Rule of Obtuse Angles";
         artist = "James Colsey";
         time = "0";
   };
   new MissionArea(MissionArea) {
      area = "-360 -648 720 1296";
      flightCeiling = "300";
      flightCeilingRange = "20";
         locked = "true";
   };
   new Sky(Sky) {
      position = "336 136 0";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      cloudHeightPer[0] = "0";
      cloudHeightPer[1] = "0";
      cloudHeightPer[2] = "0";
      cloudSpeed1 = "0.0001";
      cloudSpeed2 = "0.0002";
      cloudSpeed3 = "0.0003";
      visibleDistance = "500";
      useSkyTextures = "1";
      renderBottomTexture = "1";
      SkySolidColor = "0.600000 0.600000 0.600000 1.000000";
      fogDistance = "300";
      fogColor = "0.600000 0.600000 0.600000 1.000000";
      fogVolume1 = "-1 7.45949e-031 1.3684e-038";
      fogVolume2 = "-1 1.07208e-014 8.756e-014";
      fogVolume3 = "-1 5.1012e-010 2.05098e-008";
      materialList = "~/data/skies/Beginner/Beginner_Sky.dml";
      windVelocity = "1 0 0";
      windEffectPrecipitation = "0";
      noRenderBans = "1";
      fogVolumeColor1 = "128.000000 128.000000 128.000000 0.000000";
      fogVolumeColor2 = "128.000000 128.000000 128.000000 0.000004";
      fogVolumeColor3 = "128.000000 128.000000 128.000000 14435505.000000";
   };
   new Sun() {
      direction = "0.638261 0.459006 -0.61801";
      color = "1.400000 1.200000 0.400000 1.000000";
      ambient = "0.300000 0.300000 0.400000 1.000000";
   };
   new InteriorInstance() {
      position = "0 0 0";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors/RuleOfObtuseAngles.dif";
      showTerrainInside = "0";
   };
   new StaticShape(StartPoint) {
      position = "0 0 2";
      rotation = "1 0 0 0";
      scale = "1 1 2.5";
      dataBlock = "StartPad";
   };
   new Trigger(Bounds) {
      position = "-30.4 49.2 -25.2";
      rotation = "1 0 0 0";
      scale = "60 120 100";
      dataBlock = "InBoundsTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
   };
   new Item() {
      position = "0 -6 9.5";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "GemItem";
      collideable = "0";
      static = "1";
      rotate = "1";
         pickUpCheckpoint = "0";
   };
   new Item() {
      position = "0 -38 13";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "GemItem";
      collideable = "0";
      static = "1";
      rotate = "1";
         pickUpCheckpoint = "0";
   };
   new Item() {
      position = "0 -46 13.5";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "SuperJumpItem";
      collideable = "0";
      static = "1";
      rotate = "1";
   };
   new Item() {
      position = "0 -32 33.5";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "GemItem";
      collideable = "0";
      static = "1";
      rotate = "1";
         pickUpCheckpoint = "0";
   };
   new Item() {
      position = "0 -22 41.5";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "GemItem";
      collideable = "0";
      static = "1";
      rotate = "1";
         pickUpCheckpoint = "0";
   };
   new StaticShape(EndPoint) {
      position = "0 10 41.5";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "EndPad";
   };
   new SimGroup(MustChange_g) {

      new Path() {

         new Marker() {
            position = "0 -24 7.25";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "0";
            msToNext = "1000";
            smoothingType = "Linear";
         };
         new Marker() {
            position = "0 -24 9.25";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "1";
            msToNext = "1000";
            smoothingType = "Linear";
         };
         new Marker() {
            position = "0 -24 7.25";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "2";
            msToNext = "1000";
            smoothingType = "Linear";
         };
      };
      new PathedInterior(MustChange) {
         position = "0 0 0";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "PathedDefault";
         interiorResource = $usermods @ "/data/interiors/RuleOfObtuseAngles.dif";
         interiorIndex = "0";
         basePosition = "0 0 0";
         baseRotation = "1 0 0 0";
         baseScale = "1 1 1";
            initialTargetPosition = "-1";
      };
   };
   new SimGroup(MustChange_g) {

      new Path() {

         new Marker() {
            position = "0 -32 7.25";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "0";
            msToNext = "1000";
            smoothingType = "Linear";
         };
         new Marker() {
            position = "0 -32 9.25";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "1";
            msToNext = "1000";
            smoothingType = "Linear";
         };
         new Marker() {
            position = "0 -32 7.25";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "2";
            msToNext = "1000";
            smoothingType = "Linear";
         };
      };
      new PathedInterior(MustChange) {
         position = "0 0 0";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "PathedDefault";
         interiorResource = $usermods @ "/data/interiors/RuleOfObtuseAngles.dif";
         interiorIndex = "1";
         basePosition = "0 0 0";
         baseRotation = "1 0 0 0";
         baseScale = "1 1 1";
            initialTargetPosition = "-1";
      };
   };
   new SimGroup(MustChange_g) {

      new Path() {

         new Marker() {
            position = "-2 -34 30";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "0";
            msToNext = "1000";
            smoothingType = "Linear";
         };
         new Marker() {
            position = "2 -34 30";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "1";
            msToNext = "1000";
            smoothingType = "Linear";
         };
         new Marker() {
            position = "-2 -34 30";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "2";
            msToNext = "1000";
            smoothingType = "Linear";
         };
      };
      new PathedInterior(MustChange) {
         position = "0 0 0";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "PathedDefault";
         interiorResource = $usermods @ "/data/interiors/RuleOfObtuseAngles.dif";
         interiorIndex = "2";
         basePosition = "0 0 0";
         baseRotation = "1 0 0 0";
         baseScale = "1 1 1";
            initialTargetPosition = "-1";
      };
   };
   new SimGroup(MustChange_g) {

      new Path() {

         new Marker() {
            position = "2 -30 30";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "0";
            msToNext = "1000";
            smoothingType = "Linear";
         };
         new Marker() {
            position = "-2 -30 30";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "1";
            msToNext = "1000";
            smoothingType = "Linear";
         };
         new Marker() {
            position = "2 -30 30";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "2";
            msToNext = "1000";
            smoothingType = "Linear";
         };
      };
      new PathedInterior(MustChange) {
         position = "0 0 0";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "PathedDefault";
         interiorResource = $usermods @ "/data/interiors/RuleOfObtuseAngles.dif";
         interiorIndex = "3";
         basePosition = "0 0 0";
         baseRotation = "1 0 0 0";
         baseScale = "1 1 1";
            initialTargetPosition = "-1";
      };
   };
   new SimGroup(MustChange_g) {

      new Path() {

         new Marker() {
            position = "0 -14 31.5";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "0";
            msToNext = "2000";
            smoothingType = "Accelerate";
         };
         new Marker() {
            position = "0 -14 39.5";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "1";
            msToNext = "2000";
            smoothingType = "Accelerate";
         };
      };
      new Trigger(MustChange) {
         position = "0 -14 34.5";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "TriggerGotoTarget";
         polyhedron = "-2.0000000 -2.0000000 1.0000000 0.0000000 4.0000000 0.0000000 4.0000000 0.0000000 0.0000000 0.0000000 0.0000000 -2.0000000";
            targetTime = "99999";
      };
      new PathedInterior(MustChange) {
         position = "0 0 0";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "PathedDefault";
         interiorResource = $usermods @ "/data/interiors/RuleOfObtuseAngles.dif";
         interiorIndex = "4";
         basePosition = "0 0 0";
         baseRotation = "1 0 0 0";
         baseScale = "1 1 1";
            initialTargetPosition = "0";
      };
   };
   new Item() {
      position = "0.0976792 -52.8859 8.01156";
      rotation = "1 0 0 0";
      scale = "1 1 1.5";
      dataBlock = "EasterEgg";
      collideable = "0";
      static = "1";
      rotate = "1";
   };
   new Trigger(help1) {
      position = "-1.98883 -8.0047 9.49874";
      rotation = "1 0 0 0";
      scale = "3.9833 3.9889 1.87692";
      dataBlock = "HelpTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
         text = "Get across the shaking slanted platforms.";
   };
   new StaticShape() {
      position = "0.226777 10.2977 48.3223";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "SignFinish";
   };
   new AudioProfile(MusicProfile) {
      fileName = "~/data/sound/Pianoforte.ogg";
      description = "AudioMusic";
      preload = "0";
   };
};
//--- OBJECT WRITE END ---