$RLGemTargets[0] = 15;
$RLGemTargets[1] = 20;
$RLGemTargets[2] = 30;
$RLGemTargets[3] = 40;
$RLGemTargets[4] = 55;
$RLGemTargets[5] = 70;
$RLGemTargets[6] = 85;
$RLGemTargets[7] = 100;
$RLGemTargets[8] = 115;
$RLGemTargets[9] = 130;
$RLGemTargets[10] = 180;
$RLGemTargets[11] = 210;
$RLGemTargets[12] = 270;
$RLGemTargets[13] = 360;
$RLGemTargets[14] = 450;
$RLGemTargets[15] = 600;
$RLGemTargets[16] = 750;
$RLGemTargets[17] = 1000;
$RLGemTargets[18] = 1250;
$RLGemTargets[19] = 1650;
$RLGemTargets[20] = 2100;
$RLGemTargets[21] = 2700;
$RLGemTargets[22] = 3450;
$RLGemTargets[23] = 4350;
$RLGemTargets[24] = 5550;
$RLGemTargets[25] = 7000;
$RLGemTargets[26] = 8900;
$RLGemTargets[27] = 11250;
$RLGemTargets[28] = 14250;
$RLGemTargets[29] = 18000;
$RLGemTargets[30] = 22500;
$RLGemTargets[31] = 28500;
$RLGemTargets[32] = 36000;
$RLGemTargets[33] = 45000;
$RLGemTargets[34] = 57000;
$RLGemTargets[35] = 72000;
$RLGemTargets[36] = 90000;
$RLGemTargets[37] = 113000;
$RLGemTargets[38] = 142000;
$RLGemTargets[39] = 178000;
$RLGemTargets[40] = 223000;
$RLGemTargets[41] = 280000;
$RLGemTargets[42] = 350000;
$RLGemTargets[43] = 440000;
$RLGemTargets[44] = 550000;
$RLGemTargets[45] = 690000;
$RLGemTargets[46] = 865000;
$RLGemTargets[47] = 1080000;
$RLGemTargets[48] = 1350000;
$RLGemTargets[49] = 1700000;
$RLGemTargets[50] = 2125000;
$RLGemTargets[51] = 2650000;
$RLGemTargets[52] = 3312500;
$RLGemTargets[53] = 4140000;
$RLGemTargets[54] = 5175000;
$RLGemTargets[55] = 6468750;
$RLGemTargets[56] = 8085938;
$RLGemTargets[57] = 10107422;
$RLGemTargets[58] = 12634278;
$RLGemTargets[59] = 15792847;
$RLGemTargets[60] = 19741059;

// Multiplier increase blessings
$RL::Blessing::Name[0]   = "Ruby Essence";
$RL::Blessing::Desc[0]   = "Increases the <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Red Streak<spop> multiplier by <shadow:1:1><shadowcolor:0000007f><color:FF4444>0.5x";
$RL::Blessing::Model[0]  = "/data/shapes_pq/Gameplay/Gems/gem.dts" SPC "red";
$RL::Blessing::Effect[0] = "$RL::RedMultAdder += 0.5;";
$RL::Blessing::Rarity[0] = 2;
$RL::Blessing::Name[1]   = "Topaz Essence";
$RL::Blessing::Desc[1]   = "Increases the <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Yellow Streak<spop> multiplier by <shadow:1:1><shadowcolor:0000007f><color:FF4444>0.5x";
$RL::Blessing::Model[1]  = "/data/shapes_pq/Gameplay/Gems/gem.dts" SPC "yellow";
$RL::Blessing::Effect[1] = "$RL::YellowMultAdder += 0.5;";
$RL::Blessing::Rarity[1] = 2;
$RL::Blessing::Name[2]   = "Sapphire Essence";
$RL::Blessing::Desc[2]   = "Increases the <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Blue Streak<spop> multiplier by <shadow:1:1><shadowcolor:0000007f><color:FF4444>1x";
$RL::Blessing::Model[2]  = "/data/shapes_pq/Gameplay/Gems/gem.dts" SPC "blue";
$RL::Blessing::Effect[2] = "$RL::BlueMultAdder += 1;";
$RL::Blessing::Rarity[2] = 2;
$RL::Blessing::Name[3]   = "Platinum Luster";
$RL::Blessing::Desc[3]   = "Increases the <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Platinum Streak<spop> multiplier by <spush><shadow:1:1><shadowcolor:0000007f><color:FF4444>2x<spop>\nIncreases the <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Platinum Streak<spop> duration by <shadow:1:1><shadowcolor:0000007f><color:FF4444>25%";
$RL::Blessing::Model[3]  = "/data/shapes_pq/Gameplay/Gems/gem.dts" SPC "platinum";
$RL::Blessing::Effect[3] = "$RL::PlatinumMultAdder += 2;";
$RL::Blessing::Rarity[3] = 2;
$RL::Blessing::Name[4]   = "Chromatic Essence";
$RL::Blessing::Desc[4]   = "Increases the <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Rainbow Streak<spop> multiplier by <shadow:1:1><shadowcolor:0000007f><color:FF4444>1x";
$RL::Blessing::Model[4]  = "/data/shapes_pq/Gameplay/Gems/gem.dts" SPC "base";
$RL::Blessing::Effect[4] = "$RL::RainbowMultAdder += 1;";
$RL::Blessing::Rarity[4] = 2;
// Time increase blessings
$RL::Blessing::Name[5]   = "Time Dilation";
$RL::Blessing::Desc[5]   = "Increases the <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Time Limit<spop> by <shadow:1:1><shadowcolor:0000007f><color:FF4444>5%";
$RL::Blessing::Model[5]  = "/data/shapes_pq/Gameplay/Powerups/timetravel.dts" SPC "base";
$RL::Blessing::Effect[5] = "$RL::TimeMult += 0.05;";
$RL::Blessing::Rarity[5] = 3;
$RL::Blessing::Name[6]   = "Ruby Resonance";
$RL::Blessing::Desc[6]   = "Increases the <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Red Streak<spop> duration by <shadow:1:1><shadowcolor:0000007f><color:FF4444>10%";
$RL::Blessing::Model[6]  = "/data/shapes_pq/Gameplay/Gems/gem_fancy.dts" SPC "red";
$RL::Blessing::Effect[6] = "$RL::RedMultTimeMult += 0.1;";
$RL::Blessing::Rarity[6] = 1;
$RL::Blessing::Name[7]   = "Topaz Resonance";
$RL::Blessing::Desc[7]   = "Increases the <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Yellow Streak<spop> duration by <shadow:1:1><shadowcolor:0000007f><color:FF4444>10%";
$RL::Blessing::Model[7]  = "/data/shapes_pq/Gameplay/Gems/gem_fancy.dts" SPC "yellow";
$RL::Blessing::Effect[7] = "$RL::YellowMultTimeMult += 0.1;";
$RL::Blessing::Rarity[7] = 1;
$RL::Blessing::Name[8]   = "Sapphire Resonance";
$RL::Blessing::Desc[8]   = "Increases the <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Blue Streak<spop> duration by <shadow:1:1><shadowcolor:0000007f><color:FF4444>25%";
$RL::Blessing::Model[8]  = "/data/shapes_pq/Gameplay/Gems/gem_fancy.dts" SPC "blue";
$RL::Blessing::Effect[8] = "$RL::BlueMultTimeMult += 0.25;";
$RL::Blessing::Rarity[8] = 1;
$RL::Blessing::Name[9]   = "Surprise Crate";
$RL::Blessing::Desc[9]   = "Gain a <spush><shadow:1:1><shadowcolor:0000007f><color:FFEE11>Super Jump, Super Speed or Gyrocopter<spop> powerup for the next <spush><shadow:1:1><shadowcolor:0000007f><color:FF4444>3<spop> levels [must have space]";
$RL::Blessing::Model[9]  = "/data/shapes/Xmas/GiftCrateNormalClosed.dts" SPC "base";
$RL::Blessing::Effect[9] = "";
$RL::Blessing::Rarity[9] = 1;
$RL::Blessing::Name[10]   = "Chromatic Resonance";
$RL::Blessing::Desc[10]   = "Increases the <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Rainbow Streak<spop> duration by <shadow:1:1><shadowcolor:0000007f><color:FF4444>10%";
$RL::Blessing::Model[10]  = "/data/shapes_pq/Gameplay/Gems/gem_fancy.dts" SPC "base";
$RL::Blessing::Effect[10] = "$RL::RainbowMultTimeMult += 0.1;";
$RL::Blessing::Rarity[10] = 1;
// Gem value increase blessings
$RL::Blessing::Name[11]   = "Gem Hunter";
$RL::Blessing::Desc[11]   = "Increases the <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Bonus Value<spop> of all gems by <shadow:1:1><shadowcolor:0000007f><color:FF4444>1";
$RL::Blessing::Model[11]  = "/data/shapes/items/gem.dts" SPC "base";
$RL::Blessing::Effect[11] = "$RL::BonusAdd += 1;";
$RL::Blessing::Rarity[11] = 3;
$RL::Blessing::Name[12]   = "Gem Hoarder";
$RL::Blessing::Desc[12]   = "Increases the <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Bonus Value<spop> of all gems by <shadow:1:1><shadowcolor:0000007f><color:FF4444>3";
$RL::Blessing::Model[12]  = "/data/shapes/items/gem.dts" SPC "yellow";
$RL::Blessing::Effect[12] = "$RL::BonusAdd += 3;";
$RL::Blessing::Rarity[12] = 4;
$RL::Blessing::Name[13]   = "Gem Collector";
$RL::Blessing::Desc[13]   = "Increases the <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Bonus Value<spop> of all gems by <shadow:1:1><shadowcolor:0000007f><color:FF4444>5";
$RL::Blessing::Model[13]  = "/data/shapes/items/gem.dts" SPC "blue";
$RL::Blessing::Effect[13] = "$RL::BonusAdd += 5;";
$RL::Blessing::Rarity[13] = 5;
// Gem spawn count blessings
$RL::Blessing::Name[14]   = "Treasure Expansion";
$RL::Blessing::Desc[14]   = "Increases the number of gems spawned by <shadow:1:1><shadowcolor:0000007f><color:FF4444>1";
$RL::Blessing::Model[14]  = "/data/shapes_pq/Gameplay/Powerups/random.dts" SPC "base";
$RL::Blessing::Rarity[14] = 5;

$RL::Blessings = 15;

// Curios - Stuff that affects the whole game - global buffs/nerfs kind of
$RL::Curio::Name[0]   = "Gambler's Delight"; // Implemented
$RL::Curio::Desc[0]   = "<font:15>When collecting a gem, there is a small chance to level up, but also a small chance of destroying this <spush><shadow:1:1><shadowcolor:0000007f><color:0a9d32>Artifact<spop> and losing <spush><shadow:1:1><shadowcolor:0000007f><color:FF4444>50%<spop> of your score.";
$RL::Curio::Model[0]  = "/data/shapes_pq/Gameplay/Powerups/random.dts" SPC "base";
$RL::Curio::Rarity[0] = 1;
$RL::Curio::Name[1]   = "Sign of Diversity";  // Implemented
$RL::Curio::Desc[1]   = "<font:15>When choosing your <spush><shadow:1:1><shadowcolor:0000007f><color:0a9d32>Upgrades<spop> on levelling up, <spush><shadow:1:1><shadowcolor:0000007f><color:FF4444>1<spop> extra <spush><shadow:1:1><shadowcolor:0000007f><color:0a9d32>Upgrade<spop> can be chosen, but the number of available <spush><shadow:1:1><shadowcolor:0000007f><color:0a9d32>Upgrades<spop> will be reduced by <spush><shadow:1:1><shadowcolor:0000007f><color:FF4444>1<spop>. This <spush><shadow:1:1><shadowcolor:0000007f><color:0a9d32>Artifact<spop> will be destroyed after <spush><shadow:1:1><shadowcolor:0000007f><color:FF4444>2<spop> uses.";
$RL::Curio::Model[1]  = "/data/shapes_pq/Scenery/Signs/Sign01.dts" SPC "red_leftright";
$RL::Curio::Rarity[1] = 2;
$RL::Curio::Name[2]   = "Sign of Greed"; // Implemented
$RL::Curio::Desc[2]   = "When choosing your <spush><shadow:1:1><shadowcolor:0000007f><color:0a9d32>Upgrades<spop> on levelling up, get an additional reroll.";
$RL::Curio::Model[2]  = "/data/shapes_pq/Scenery/Signs/Sign01.dts" SPC "yellow_leftright";
$RL::Curio::Rarity[2] = 1;
$RL::Curio::Name[3]   = "Gold Coin of Fortune"; // Implemented
$RL::Curio::Desc[3]   = "Upon levelling up, start with <spush><shadow:1:1><shadowcolor:0000007f><color:FF4444>10%<spop> of the target score.";
$RL::Curio::Model[3]  = "/data/shapes_pq/Gameplay/Coin/coin.dts" SPC "base";
$RL::Curio::Rarity[3] = 1;
$RL::Curio::Name[4]   = "Mine of Misfortune"; // Implemented
$RL::Curio::Desc[4]   = "Lose all <spush><shadow:1:1><shadowcolor:0000007f><color:0a9d32>Upgrades<spop>, gain <spush><shadow:1:1><shadowcolor:0000007f><color:FF4444>0.2x<spop> <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>global multiplier<spop> for each <spush><shadow:1:1><shadowcolor:0000007f><color:0a9d32>Upgrade<spop> lost, maximum up to <spush><shadow:1:1><shadowcolor:0000007f><color:FF4444>2x<spop>.";
$RL::Curio::Model[4]  = "/data/shapes_pq/Gameplay/Hazards/Mine/landmine.dts" SPC "base";
$RL::Curio::Rarity[4] = 2;
$RL::Curio::Name[5]   = "Prehistoric Shard"; // Implemented
$RL::Curio::Desc[5]   = "Prevent game over once. This <spush><shadow:1:1><shadowcolor:0000007f><color:0a9d32>Artifact<spop> will be destroyed upon use.";
$RL::Curio::Model[5]  = "/data/shapes_pq/Gameplay/Hazards/Ice_Shard.dts" SPC "base";
$RL::Curio::Rarity[5] = 3;
$RL::Curio::Name[6]   = "Easter Egg"; // Implemented
$RL::Curio::Desc[6]   = "Gem colors are randomized. Gems are worth <spush><shadow:1:1><shadowcolor:0000007f><color:FF4444>2x<spop> their normal value. Lasts for <spush><shadow:1:1><shadowcolor:0000007f><color:FF4444>3<spop> levels.";
$RL::Curio::Model[6]  = "/data/shapes_pq/Gameplay/NestEgg/NestEgg.dts" SPC "base";
$RL::Curio::Rarity[6] = 2;
$RL::Curio::Name[7]   = "Alien Spaceship"; // Implemented
$RL::Curio::Desc[7]   = "Increased movement speed.";
$RL::Curio::Model[7]  = "/data/shapes_pq/Gameplay/Powerups/superspeed.dts" SPC "base";
$RL::Curio::Rarity[7] = 1;
$RL::Curio::Name[8]   = "Blue Sparks"; // Implemented
$RL::Curio::Desc[8]   = "For each <spush><shadow:1:1><shadowcolor:0000007f><color:0a9d32>Artifact<spop> collected, gain <spush><shadow:1:1><shadowcolor:0000007f><color:FF4444>2x<spop> score multiplier.";
$RL::Curio::Model[8]  = "/data/shapes_pq/Gameplay/Powerups/teleport.dts" SPC "base";
$RL::Curio::Rarity[8] = 1;
$RL::Curio::Name[9]   = "Orange Sparks"; // Implemented
$RL::Curio::Desc[9]   = "For each level completed, gain <spush><shadow:1:1><shadowcolor:0000007f><color:FF4444>0.25<spop> <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Bonus Value<spop>.";
$RL::Curio::Model[9]  = "/data/shapes_pq/Gameplay/Powerups/teleport.dts" SPC "yellow";
$RL::Curio::Rarity[9] = 3;
$RL::Curio::Name[10]   = "Nuclear Fusion"; // Implemented
$RL::Curio::Desc[10]   = "When collecting a gem, there is a <spush><shadow:1:1><shadowcolor:0000007f><color:FF4444>10%<spop> chance for it to be counted twice.";
$RL::Curio::Model[10]  = "/data/shapes_pq/Gameplay/Hazards/Mine/landmine.dts" SPC "nuke";
$RL::Curio::Rarity[10] = 2;
$RL::Curio::Name[11]   = "Time Capsule"; // Implemented
$RL::Curio::Desc[11]   = "Reduce the <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Time Limit<spop> by <spush><shadow:1:1><shadowcolor:0000007f><color:FF4444>10s<spop>. Quadruples the score multipliers (maximum at <spush><shadow:1:1><shadowcolor:0000007f><color:FF4444>10x<spop>).";
$RL::Curio::Model[11]  = "/data/shapes_pq/Gameplay/Powerups/timepenalty.dts" SPC "base";
$RL::Curio::Rarity[11] = 2;
$RL::Curio::Name[12]   = "Time Machine"; // Implemented
$RL::Curio::Desc[12]   = "Reduce the <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Time Limit<spop> by <spush><shadow:1:1><shadowcolor:0000007f><color:FF4444>10s<spop>. Reduce current level by <spush><shadow:1:1><shadowcolor:0000007f><color:FF4444>10<spop>.";
$RL::Curio::Model[12]  = "/data/shapes_pq/Gameplay/Powerups/sundial.dts" SPC "base";
$RL::Curio::Rarity[12] = 2;
$RL::Curio::Name[13]   = "Fire Charge";
$RL::Curio::Desc[13]   = "Enables the <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Blast Ability<spop>.";
$RL::Curio::Model[13]  = "/data/shapes_pq/Gameplay/Powerups/fireball.dts" SPC "base";
$RL::Curio::Rarity[13] = 2;
$RL::Curio::Name[14]   = "High Voltage Kit";
$RL::Curio::Desc[14]   = "Converts <spush><shadow:1:1><shadowcolor:0000007f><color:FF4444>10%<spop> of your ongoing <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>streak duration<spop> into score multiplier.";
$RL::Curio::Model[14]  = "/data/shapes_mbu/images/blast.dts";
$RL::Curio::Rarity[14] = 3;
$RL::Curio::Name[15]   = "Blast Battery";
$RL::Curio::Desc[15]   = "Upgrades the <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Blast Ability<spop> to <spush><shadow:1:1><shadowcolor:0000007f><color:001cdc>Triple Blast<spop>.";
$RL::Curio::Model[15]  = "/data/shapes/items/Blast.dts" SPC "base";
$RL::Curio::Rarity[15] = 3;

$RL::Curios = 15; // Will change to 16 after Fire Charge is collected since the one after that depends on that

package RogueLike {
	function huntStoreGem(%client, %huntExtraValue, %color) {
		if (!$RogueLikeHunt) {
			// (De)activating packages is messed up so we have the original function contents duped here
			if (!%client.disableGems[%huntExtraValue + 1]) {
				%client.gemCount += %huntExtraValue;
				%client.gemsFound[%huntExtraValue + 1] ++;
			} else
				%client.gemsFound[1] ++;

			//Show a message
			%client.displayGemMessage((%huntExtraValue+1 >= 0? "+":"") @ (%huntExtraValue + 1), %color);
			return;
		}
		%mult = %client.scoreMultiplier;
		%add = $RL::BonusAdd;
		if ($RL::Curio::Active[9]) {
			// Orange Sparks
			%add += 0.25 * $RL::CurrentLevel;
		}
		if ($RL::Curio::Active[8]) {
			// Blue Sparks
			%mult += 2 * $RL::Curio::Collected;
		}
		if ($RL::Curio::Active[14]) {
			// High Voltage Kit
			%curTime = $Time::ElapsedTime;
			%lastTime = %client.multCountdownEndTime;

			if (%curTime > %lastTime) {
				%remainingTime = 0;
			} else {
				%remainingTime = %client.multCountdownEndTime - %curTime;
			}

			%mult += mFloor(0.1 * %remainingTime / 1000);
		}

		if ($RL::Curio::Active[4]) {
			// Mine of Misfortune
			%mult *= (1 + $RL::Curio::MineOfMisfortuneMult);
		}

		%nuclearFusion = false;
		if ($RL::Curio::Active[10]) {
			// Nuclear Fusion
			%c = getRandom(0, 100);
			if (%c <= 10) {
				%nuclearFusion = true;
				%mult *= 2; // The math works out
			}
		}

		if ($RL::Curio::Active[6]) {
			%mult *= 2;
			// Randomize gem colors
			%c = getRandom(0, 3);
			if (%c == 0)
				%huntExtraValue = 0;
			if (%c == 1)
				%huntExtraValue = 1;
			if (%c == 2)
				%huntExtraValue = 4;
			if (%c == 3)
				%huntExtraValue = 9;
		}

		%value = (%huntExtraValue + %add + 1) * %mult;
		if (!%client.disableGems[%huntExtraValue + 1]) {
			%client.gemCount -= 1;
			%client.gemCount += %value;
			%client.gemsFound[%huntExtraValue + 1] ++;
		} else
			%client.gemsFound[1] ++;

		//Show a message
		%client.displayGemMessage((%value >= 0? "+":"") @ mRound(%value, 1), %color);

		%gemColor = "";
		if (%huntExtraValue == 0)
			%gemColor = "r";
		if (%huntExtraValue == 1)
			%gemColor = "y";
		if (%huntExtraValue == 4)
			%gemColor = "b";
		if (%huntExtraValue == 9)
			%gemColor = "p";

		// Store the lastGem - shift the values
		%client.lastGem[3] = %client.lastGem[2];
		%client.lastGem[2] = %client.lastGem[1];
		%client.lastGem[1] = %client.lastGem[0];
		%client.lastGem[0] = %gemColor;

		if (%nuclearFusion) {
			// Shift again
			%client.lastGem[3] = %client.lastGem[2];
			%client.lastGem[2] = %client.lastGem[1];
			%client.lastGem[1] = %client.lastGem[0];
			%client.lastGem[0] = %gemColor;
			%client.playPitchedSound("gotdiamond");
		}

		if ($RL::Curio::Active[0]) {
			// Gambler's delight
			// 5% chance
			%c1 = getRandom(0, 100);
			%c2 = getRandom(0, 100);
			if (%c1 <= 5) {
				// Break this curio, halve the score and break the curio
				$RL::Curio::Active[0] = false;
				%client.addBubbleLine("Gambler's Delight: You lost 50% of your score!");
				%client.gemCount = mFloor(%client.gemCount / 2);
				%client.player.playAudio(0, DoAnvilSfx);
				%client.player.playAudio(0, DoAnvilSfx);
			}
			if (%c2 <= 5) {
				// Get enough score to level up
				%client.addBubbleLine("Gambler's Delight: You levelled up!");
				%client.gemCount = $RLGemTargets[$RL::CurrentLevel];
				%client.playPitchedSound("gotalldiamonds");
			}
		}
		PlayGui.updateGems();
		tryGemMultipliers(%client);
		schedule(5, 0, tryIncreaseLevel);
		if (LocalClientConnection == %client) {
			updateGemDots(%client); // Update the UI to display our gem colors
		}
	}

	function ClientMode_hunt::shouldUpdateGems(%this) {
		Parent::shouldUpdateGems();
		if ($RogueLikeHunt) {
			PG_HuntCounter.setVisible(0);
			RLTargetText.setText("<font:32><color:FFFFFF>Score: " @ mRound(LocalClientConnection.gemCount, 2) NL "Target: " @ $RLGemTargets[$RL::CurrentLevel]);
		}
		return false;
	}

	function clientUpdateBlast(%timeDelta) {
		if ($MP::PartyTripleBlast && !$RogueLikeHunt) // Do not increment it in triple-blast mode
			return;

		// blast code update
		if (($Game::IsMode["challenge"] && $CurrentWeeklyChallenge.tripleBlast) || ($RogueLikeHunt && $MP::PartyTripleBlast))
			$MP::BlastValue += (%timeDelta / 12000);
		else
			$MP::BlastValue += (%timeDelta / $MP::BlastChargeTime);
		if ($MP::BlastValue > 1)
			$MP::BlastValue = 1;
		if ($MP::BlastValue < 0)
			$MP::BlastValue = 0;
		PlayGui.setBlastValue($MP::BlastValue);
	}


	function serverCmdBlast(%client, %gravity) {
		// CANCEL THE CANNON.
		if (%client.isInCannon()) {
			%client.cancelCannon(true);
			return;
		}

		if (($Game::IsMode["challenge"] && $CurrentWeeklyChallenge.tripleBlast) || %client.usingPartyTripleBlast || ($RogueLikeHunt && $MP::PartyTripleBlast)) {
			if (%client.blastValue <= 0.35) { // It should be "== 0.34", but uh, floating point nonsense
				%client.setBlastValue(0);
				if (%client.usingPartyTripleBlast) {
					%client.usingPartyTripleBlast = false;
					$MP::PartyTripleBlast = false;
				}
			} else {
				%client.setBlastValue(%client.blastValue - 0.33); // Sends to client
			}
			%client.makeBlastParticle(%gravity);
			ServerPlay3D(blastSfx, %client.player.getWorldBoxCenter());
			%client.setSpecialBlast(false);
			return;
		}

		//Display blast particles and make explosion
		%client.makeBlastParticle(%gravity);
		ServerPlay3D(blastSfx, %client.player.getWorldBoxCenter());
		%client.setSpecialBlast(false);
		%client.setBlastValue(0); // Sends to client
	}

	// These two functions are basically unused so we can use these to store our rng choices
	function recordWriteScores(%stream) {
		%stream.writeRawU8($RecordTag["scores"]);
		if ($RogueLikeHunt) {
			%stream.writeRawU8($RL::ChoiceType);
			%stream.writeRawU8($RL::ChoiceIdx);
		}
	}

	function PlaybackInfo::readScores(%this) {
		if ($RogueLikeHunt) {
			$RL::ChoiceType = %this.readRawU8();
			$RL::ChoiceIdx = %this.readRawU8();
			RLApplyReplayFrame();
		}
	}
};

function resetMultGems(%client) {
	%client.lastGem[0] = 0;
	%client.lastGem[1] = 0;
	%client.lastGem[2] = 0;
	%client.lastGem[3] = 0;
}

function resetMultipliers(%client) {
	%client.scoreMultiplier = 1;
	%client.scoreAdder = 0;
}

function extendMultCountdown(%client, %time) {
	%ms = %time * 1000;
	cancel(%client.multCountdown);

	%curTime = $Time::ElapsedTime;
	%lastTime = %client.multCountdownEndTime;

	if (%curTime > %lastTime) {
		%client.multCountdownEndTime = %curTime + %ms;
		%remainingTime = %ms;
	} else {
		%client.multCountdownEndTime += %ms;
		%remainingTime = %client.multCountdownEndTime - %curTime;
	}

	%client.multCountdown = schedule(%remainingTime, 0, resetMultipliers, %client);

	commandToClient(%client, 'StartCountdownLeft', 	%remainingTime, "timerHuntRespawn");
}

function tryGemMultipliers(%client) {
	// Attempt to find any patterns in the last 4 gems
	%pattern = %client.lastGem[0] @ %client.lastGem[1] @ %client.lastGem[2] @ %client.lastGem[3];
	
	if (%pattern $= "rrrr") {
		%client.scoreMultiplier += $RL::RedMultAdder;
		%client.addBubbleLine("Red streak! Multiplier increased to " @ %client.scoreMultiplier @ "x!");
		resetMultGems(%client);
		extendMultCountdown(%client, 10 * $RL::RedMultTimeMult);
		return;
	}
	if (%pattern $= "yyyy") {
		%client.scoreMultiplier += $RL::YellowMultAdder;
		%client.addBubbleLine("Yellow streak! Multiplier increased to " @ %client.scoreMultiplier @ "x!");
		resetMultGems(%client);
		extendMultCountdown(%client, 10 * $RL::YellowMultTimeMult);
		return;
	}
	if (strstr(%pattern, "bbb") != -1) {
		%client.scoreMultiplier += $RL::BlueMultAdder;
		%client.addBubbleLine("Blue streak! Multiplier increased to " @ %client.scoreMultiplier @ "x!");
		resetMultGems(%client);
		extendMultCountdown(%client, 15 * $RL::BlueMultTimeMult);
		return;
	}
	if (strstr(%pattern, "pp") != -1) { // This thing is hard to each anyway - for certain maps
		%client.scoreMultiplier += $RL::PlatinumMultAdder;
		%client.addBubbleLine("Platinum streak! Multiplier increased to " @ %client.scoreMultiplier @ "x!");
		resetMultGems(%client);
		extendMultCountdown(%client, 15 * $RL::PlatinumMultTimeMult);
		return;
	}
	if (strstr(%pattern, "ryb") != -1 || strstr(%pattern , "byr") != -1) {
		%client.scoreMultiplier += $RL::RainbowMultAdder;
		%client.addBubbleLine("Rainbow streak! Multiplier increased to " @ %client.scoreMultiplier @ "x!");
		resetMultGems(%client);
		extendMultCountdown(%client, 10 * $RL::RainbowMultTimeMult);
		return;
	}
}

function getGemDotColor(%col) {
	switch$(%col) {
		case "r":
			return "Red";
		case "y":
			return "Yellow";
		case "b":
			return "Blue";
		case "p":
			return "Platinum";
	}
}

function updateGemDots(%client) {
	%n1Vis = %client.lastGem[0] !$= 0;
	%n2Vis = %client.lastGem[1] !$= 0;
	%n3Vis = %client.lastGem[2] !$= 0;
	%n4Vis = %client.lastGem[3] !$= 0;
	GemDot1.setVisible(%n1Vis);
	GemDot2.setVisible(%n2Vis);
	GemDot3.setVisible(%n3Vis);
	GemDot4.setVisible(%n4Vis);
	// Change bitmaps according to colors
	GemDot1.setBitmap($userMods @ "/client/ui/mp/radar/GemItem" @ getGemDotColor(%client.lastGem[0]) @ ".png");
	GemDot2.setBitmap($userMods @ "/client/ui/mp/radar/GemItem" @ getGemDotColor(%client.lastGem[1]) @ ".png");
	GemDot3.setBitmap($userMods @ "/client/ui/mp/radar/GemItem" @ getGemDotColor(%client.lastGem[2]) @ ".png");
	GemDot4.setBitmap($userMods @ "/client/ui/mp/radar/GemItem" @ getGemDotColor(%client.lastGem[3]) @ ".png");
}

function buildGemDots() {
	if (!$RogueLikeGemDotsBuilt) {
		new GuiBitmapCtrl(GemDot1) {
			profile = "GuiDefaultProfile";
			horizSizing = "left";
			vertSizing = "bottom";
			extent = "16 16";
			minExtent = "8 8";
			visible = "0";
			bitmap = $userMods @ "/client/ui/mp/radar/GemItemRed.png";
		};
		new GuiBitmapCtrl(GemDot2) {
			profile = "GuiDefaultProfile";
			horizSizing = "left";
			vertSizing = "bottom";
			extent = "16 16";
			minExtent = "8 8";
			visible = "0";
			bitmap = $userMods @ "/client/ui/mp/radar/GemItemRed.png";
		};
		new GuiBitmapCtrl(GemDot3) {
			profile = "GuiDefaultProfile";
			horizSizing = "left";
			vertSizing = "bottom";
			extent = "16 16";
			minExtent = "8 8";
			visible = "0";
			bitmap = $userMods @ "/client/ui/mp/radar/GemItemRed.png";
		};
		new GuiBitmapCtrl(GemDot4) {
			profile = "GuiDefaultProfile";
			horizSizing = "left";
			vertSizing = "bottom";
			extent = "16 16";
			minExtent = "8 8";
			visible = "0";
			bitmap = $userMods @ "/client/ui/mp/radar/GemItemRed.png";
		};

		PlayGuiContent.add(GemDot1);
		PlayGuiContent.add(GemDot2);
		PlayGuiContent.add(GemDot3);
		PlayGuiContent.add(GemDot4);

		$RogueLikeGemDotsBuilt = true;
	}
}

function buildBlessingsPicker() {
	if (!$Server::Dedicated && !$RLBlessingsBuilt) {
		new GuiControl(BlessingStatsDlg) {
			profile = "GuiDefaultProfile";
			horizSizing = "right";
			vertSizing = "bottom";
			position = "0 0";
			extent = "800 600";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
				_guiSize = "800 600";

			new GuiControl() {
				profile = "PQWindowProfile";
				horizSizing = "center";
				vertSizing = "center";
				position = "0 0";
				extent = "450 550";
				minExtent = "27 27";
				visible = "1";
				helpTag = "0";

				new GuiScrollCtrl() {
					profile = "PQScrollWhiteProfile";
					horizSizing = "width";
					vertSizing = "height";
					position = "18 14";
					extent = "417 477";
					minExtent = "8 8";
					visible = "1";
					helpTag = "0";
					willFirstRespond = "1";
					hScrollBar = "alwaysOff";
					vScrollBar = "alwaysOn";
					constantThumbHeight = "0";
					childMargin = "0 0";

					new GuiMLTextCtrl(BlessingStatsText) {
						profile = "GuiMLTextProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "0 0";
						extent = "410 14";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						lineSpacing = "2";
						allowColorChars = "0";
						maxChars = "-1";
					};
				};
				new GuiBorderButtonCtrl() {
					profile = "PQButtonProfile";
					horizSizing = "center";
					vertSizing = "bottom";
					position = "48 490";
					extent = "94 45";
					minExtent = "8 8";
					visible = "1";
					command = "Canvas.popDialog(BlessingStatsDlg);";
					helpTag = "0";
					text = "Close";
					groupNum = "-1";
					buttonType = "PushButton";
					repeatPeriod = "1000";
					repeatDecay = "1";
				};
			};
		};

		new GuiControl(BlessingsPickerDlg) {
			profile = "GuiDefaultProfile";
			horizSizing = "right";
			vertSizing = "bottom";
			position = "0 0";
			extent = "800 600";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
				_guiSize = "800 600";

			new GuiControl(BlessingsPickerInner) {
				profile = "GuiDefaultProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "0 0";
				extent = "650 550";
				minExtent = "27 27";
				visible = "1";
				helpTag = "0";

				new GuiMLTextCtrl(BlessingSelectText) {
					profile = "GuiMLTextProfile";
					horizSizing = "center";
					vertSizing = "bottom";
					position = "25 0";
					extent = "650 14";
					minExtent = "8 8";
					visible = "1";
					helpTag = "0";
					lineSpacing = "2";
					allowColorChars = "0";
					maxChars = "-1";
				};

				new GuiBorderButtonCtrl(RLBlessing1) {
					profile = "PQButtonProfile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = "0 100";
					extent = "200 400";
					minExtent = "8 8";
					visible = "1";
					command = "";
					helpTag = "0";
					text = "";
					groupNum = "-1";
					buttonType = "PushButton";
					repeatPeriod = "1000";
					repeatDecay = "1";
					active = "0";

					new GuiMLTextCtrl(BlessingTitle1) {
						profile = "GuiMLTextProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "25 30";
						extent = "200 14";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						lineSpacing = "2";
						allowColorChars = "0";
						maxChars = "-1";
					};

					new GuiObjectView(BlessingModel1) {
						profile = "GuiButtonProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "0 60";
						extent = "150 150";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						cameraZRot = "0";
						forceFOV = "0";
						skin = "base";
						cameraRotX = "0";
						cameraZRotSpeed = "0.001";
						orbitDistance = "50";
						autoSize = "1";
					};

					new GuiMLTextCtrl(BlessingDesc1) {
						profile = "GuiMLTextProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "25 230";
						extent = "160 14";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						lineSpacing = "2";
						allowColorChars = "0";
						maxChars = "-1";
					};

					new GuiBorderButtonCtrl() {
						profile = "PQButtonProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "26 330";
						extent = "94 45";
						minExtent = "8 8";
						visible = "1";
						command = "RLSelectPassive(1);";
						helpTag = "0";
						text = "Select";
						groupNum = "-1";
						buttonType = "PushButton";
						repeatPeriod = "1000";
						repeatDecay = "1";
					};
				};

				new GuiBorderButtonCtrl(RLBlessing2) {
					profile = "PQButtonProfile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = "225 100";
					extent = "200 400";
					minExtent = "27 27";
					visible = "1";
					command = "";
					helpTag = "0";
					text = "";
					groupNum = "-1";
					buttonType = "PushButton";
					repeatPeriod = "1000";
					repeatDecay = "1";
					active = "0";

					new GuiMLTextCtrl(BlessingTitle2) {
						profile = "GuiMLTextProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "25 30";
						extent = "200 14";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						lineSpacing = "2";
						allowColorChars = "0";
						maxChars = "-1";
					};

					new GuiObjectView(BlessingModel2) {
						profile = "GuiButtonProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "0 60";
						extent = "150 150";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						cameraZRot = "0";
						forceFOV = "0";
						skin = "base";
						cameraRotX = "0";
						cameraZRotSpeed = "0.001";
						orbitDistance = "50";
						autoSize = "1";
					};

					new GuiMLTextCtrl(BlessingDesc2) {
						profile = "GuiMLTextProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "25 230";
						extent = "160 14";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						lineSpacing = "2";
						allowColorChars = "0";
						maxChars = "-1";
					};

					new GuiBorderButtonCtrl() {
						profile = "PQButtonProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "26 330";
						extent = "94 45";
						minExtent = "8 8";
						visible = "1";
						command = "RLSelectPassive(2);";
						helpTag = "0";
						text = "Select";
						groupNum = "-1";
						buttonType = "PushButton";
						repeatPeriod = "1000";
						repeatDecay = "1";
					};
				};
				new GuiBorderButtonCtrl(RLBlessing3) {
					profile = "PQButtonProfile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = "450 100";
					extent = "200 400";
					minExtent = "27 27";
					visible = "1";
					command = "";
					helpTag = "0";
					text = "";
					groupNum = "-1";
					buttonType = "PushButton";
					repeatPeriod = "1000";
					repeatDecay = "1";
					active = "0";

					new GuiMLTextCtrl(BlessingTitle3) {
						profile = "GuiMLTextProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "25 30";
						extent = "200 14";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						lineSpacing = "2";
						allowColorChars = "0";
						maxChars = "-1";
					};

					new GuiObjectView(BlessingModel3) {
						profile = "GuiButtonProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "0 60";
						extent = "150 150";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						cameraZRot = "0";
						forceFOV = "0";
						skin = "base";
						cameraRotX = "0";
						cameraZRotSpeed = "0.001";
						orbitDistance = "50";
						autoSize = "1";
					};

					new GuiMLTextCtrl(BlessingDesc3) {
						profile = "GuiMLTextProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "25 230";
						extent = "160 14";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						lineSpacing = "2";
						allowColorChars = "0";
						maxChars = "-1";
					};

					new GuiBorderButtonCtrl() {
						profile = "PQButtonProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "26 330";
						extent = "94 45";
						minExtent = "8 8";
						visible = "1";
						command = "RLSelectPassive(3);";
						helpTag = "0";
						text = "Select";
						groupNum = "-1";
						buttonType = "PushButton";
						repeatPeriod = "1000";
						repeatDecay = "1";
					};
				};

				new GuiBorderButtonCtrl(RLReroll) {
					profile = "PQButtonProfile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = "325 500";
					extent = "94 45";
					minExtent = "8 8";
					visible = "1";
					command = "RLReroll();";
					helpTag = "0";
					text = "Reroll";
					groupNum = "-1";
					buttonType = "PushButton";
					repeatPeriod = "1000";
					repeatDecay = "1";
				};

				new GuiBorderButtonCtrl(RLStats) {
					profile = "PQButtonProfile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = "231 500";
					extent = "94 45";
					minExtent = "8 8";
					visible = "1";
					command = "RLPopulateStats(); Canvas.pushDialog(BlessingStatsDlg);";
					helpTag = "0";
					text = "Stats";
					groupNum = "-1";
					buttonType = "PushButton";
					repeatPeriod = "1000";
					repeatDecay = "1";
				};
			};
		};

		new GuiControl(CurioPickerDlg) {
			profile = "GuiDefaultProfile";
			horizSizing = "right";
			vertSizing = "bottom";
			position = "0 0";
			extent = "800 600";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
				_guiSize = "800 600";

			new GuiControl(CurioPickerInner) {
				profile = "GuiDefaultProfile";
				horizSizing = "right";
				vertSizing = "bottom";
				position = "0 0";
				extent = "650 550";
				minExtent = "27 27";
				visible = "1";
				helpTag = "0";

				new GuiMLTextCtrl(CurioSelectText) {
					profile = "GuiMLTextProfile";
					horizSizing = "center";
					vertSizing = "bottom";
					position = "25 0";
					extent = "650 14";
					minExtent = "8 8";
					visible = "1";
					helpTag = "0";
					lineSpacing = "2";
					allowColorChars = "0";
					maxChars = "-1";
				};

				new GuiBorderButtonCtrl(RLCurio1) {
					profile = "PQButtonProfile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = "110 100";
					extent = "200 400";
					minExtent = "8 8";
					visible = "1";
					command = "";
					helpTag = "0";
					text = "";
					groupNum = "-1";
					buttonType = "PushButton";
					repeatPeriod = "1000";
					repeatDecay = "1";
					active = "0";

					new GuiMLTextCtrl(CurioTitle1) {
						profile = "GuiMLTextProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "25 30";
						extent = "200 14";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						lineSpacing = "2";
						allowColorChars = "0";
						maxChars = "-1";
					};

					new GuiObjectView(CurioModel1) {
						profile = "GuiButtonProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "0 60";
						extent = "150 150";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						cameraZRot = "0";
						forceFOV = "0";
						skin = "base";
						cameraRotX = "0";
						cameraZRotSpeed = "0.001";
						orbitDistance = "50";
						autoSize = "1";
					};

					new GuiMLTextCtrl(CurioDesc1) {
						profile = "GuiMLTextProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "25 230";
						extent = "160 14";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						lineSpacing = "2";
						allowColorChars = "0";
						maxChars = "-1";
					};

					new GuiBorderButtonCtrl() {
						profile = "PQButtonProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "26 330";
						extent = "94 45";
						minExtent = "8 8";
						visible = "1";
						command = "RLUseCurio(1);";
						helpTag = "0";
						text = "Select";
						groupNum = "-1";
						buttonType = "PushButton";
						repeatPeriod = "1000";
						repeatDecay = "1";
					};
				};

				new GuiBorderButtonCtrl(RLCurio2) {
					profile = "PQButtonProfile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = "340 100";
					extent = "200 400";
					minExtent = "27 27";
					visible = "1";
					command = "";
					helpTag = "0";
					text = "";
					groupNum = "-1";
					buttonType = "PushButton";
					repeatPeriod = "1000";
					repeatDecay = "1";
					active = "0";

					new GuiMLTextCtrl(CurioTitle2) {
						profile = "GuiMLTextProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "25 30";
						extent = "200 14";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						lineSpacing = "2";
						allowColorChars = "0";
						maxChars = "-1";
					};

					new GuiObjectView(CurioModel2) {
						profile = "GuiButtonProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "0 60";
						extent = "150 150";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						cameraZRot = "0";
						forceFOV = "0";
						skin = "base";
						cameraRotX = "0";
						cameraZRotSpeed = "0.001";
						orbitDistance = "50";
						autoSize = "1";
					};

					new GuiMLTextCtrl(CurioDesc2) {
						profile = "GuiMLTextProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "25 230";
						extent = "160 14";
						minExtent = "8 8";
						visible = "1";
						helpTag = "0";
						lineSpacing = "2";
						allowColorChars = "0";
						maxChars = "-1";
					};

					new GuiBorderButtonCtrl() {
						profile = "PQButtonProfile";
						horizSizing = "center";
						vertSizing = "bottom";
						position = "26 330";
						extent = "94 45";
						minExtent = "8 8";
						visible = "1";
						command = "RLUseCurio(2);";
						helpTag = "0";
						text = "Select";
						groupNum = "-1";
						buttonType = "PushButton";
						repeatPeriod = "1000";
						repeatDecay = "1";
					};
				};

				new GuiBorderButtonCtrl(RLSkipCurio) {
					profile = "PQButtonProfile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = "325 500";
					extent = "94 45";
					minExtent = "8 8";
					visible = "1";
					command = "Canvas.popDialog(CurioPickerDlg);showBlessingPicker();";
					helpTag = "0";
					text = "Skip";
					groupNum = "-1";
					buttonType = "PushButton";
					repeatPeriod = "1000";
					repeatDecay = "1";
				};

				new GuiBorderButtonCtrl(RLStats) {
					profile = "PQButtonProfile";
					horizSizing = "right";
					vertSizing = "bottom";
					position = "231 500";
					extent = "94 45";
					minExtent = "8 8";
					visible = "1";
					command = "RLPopulateStats(); Canvas.pushDialog(BlessingStatsDlg);";
					helpTag = "0";
					text = "Stats";
					groupNum = "-1";
					buttonType = "PushButton";
					repeatPeriod = "1000";
					repeatDecay = "1";
				};
			};
		};

		new GuiObjectView(RL_ShowGem) {
			profile = "GuiButtonProfile";
			horizSizing = "right";
			vertSizing = "bottom";
			position = "-6 15";
			extent = "60 60";
			minExtent = "8 8";
			visible = "1";
			helpTag = "0";
			cameraZRot = "0";
			forceFOV = "0";
			skin = "base";
			cameraRotX = "0";
			cameraZRotSpeed = "0.001";
			orbitDistance = "1.39886";
			autoSize = "1";
		};
		new GuiMLTextCtrl(RLTargetText) {
			profile = "GuiMLTextProfile";
			horizSizing = "right";
			vertSizing = "bottom";
			position = "50 9";
			extent = "355 55";
			minExtent = "8 8";
			visible = "1";
			lineSpacing = "2";
			allowColorChars = "0";
			maxChars = "-1";
			defaultText = "<font:32><color:FFFFFF>/69"; // lel
		};

		%fmt = "<bold:48><color:FFFFFF><just:center><shadowcolor:0000007f><shadow:1:1>";
		%fmtSmall = "<bold:24><just:center>";
		%fmtDesc = "<bold:18><just:left>";
		BlessingSelectText.setText(%fmt @ "Level Up\nChoose an Upgrade");
		BlessingTitle1.setText(%fmtSmall @ "Passive 1");
		BlessingTitle2.setText(%fmtSmall @ "Passive 2");
		BlessingTitle3.setText(%fmtSmall @ "Passive 3");
		BlessingModel1.setModel($userMods @ "/data/shapes/items/timetravel.dts", "base");
		BlessingModel2.setModel($userMods @ "/data/shapes/items/timetravel.dts", "base");
		BlessingModel3.setModel($userMods @ "/data/shapes/items/timetravel.dts", "base");
		BlessingDesc1.setText(%fmtDesc @ "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec odio tincidunt tincidunt.");
		BlessingDesc2.setText(%fmtDesc @ "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec odio tincidunt tincidunt.");
		BlessingDesc3.setText(%fmtDesc @ "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec odio tincidunt tincidunt.");
		PG_TopLeftCounterContainer.add(RLTargetText);
		PG_TopLeftCounterContainer.add(RL_ShowGem);

		CurioSelectText.setText(%fmt @ "Level Up\nChoose an Artifact");
		CurioTitle1.setText(%fmtSmall @ "Curio 1");
		CurioTitle2.setText(%fmtSmall @ "Curio 2");
		CurioModel1.setModel($userMods @ "/data/shapes/items/timetravel.dts", "base");
		CurioModel2.setModel($userMods @ "/data/shapes/items/timetravel.dts", "base");
		CurioDesc1.setText(%fmtDesc @ "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec odio tincidunt tincidunt.");
		CurioDesc2.setText(%fmtDesc @ "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam nec purus nec odio tincidunt tincidunt.");
		RL_ShowGem.setModel($usermods @ "/data/shapes_pq/gameplay/gems/gem.dts", "platinum");

		$RLBlessingsBuilt = true;
	}
}

function setupBlessingsPicker(%count) {
	if (%count == 3) {
		RLBlessing1.setVisible(true);
		RLBlessing2.setVisible(true);
		RLBlessing3.setVisible(true);
		RLBlessing1.setPosition("0 100");
		RLBlessing2.setPosition("225 100");
		RLBlessing3.setPosition("450 100");
	}
	if (%count == 2) {
		RLBlessing1.setVisible(true);
		RLBlessing2.setVisible(true);
		RLBlessing3.setVisible(false);
		RLBlessing1.setPosition("110 100");
		RLBlessing2.setPosition("340 100");
	}
}

function RLGetArtifactEffects(%idx) {
	switch (%idx) {
		case 4:
			// Mine of Misfortune
			return ": x" SPC (1 + $RL::Curio::MineOfMisfortuneMult) SPC "Mult";

		case 6:
			// Easter Egg
			return ": x 2 Mult";

		case 8:
			// Blue sparks
			return ": +" SPC 2 * $RL::Curio::Collected SPC "Mult";

		case 9:
			// Orange sparks
			return ": +" SPC 0.25 * $RL::CurrentLevel SPC "Bonus Value";

		case 14:
			// High Voltage
			%curTime = $Time::ElapsedTime;
			%lastTime = LocalClientConnection.multCountdownEndTime;

			if (%curTime > %lastTime) {
				%remainingTime = 0;
			} else {
				%remainingTime = LocalClientConnection.multCountdownEndTime - %curTime;
			}

			return ": +" SPC mFloor(0.1 * (%remainingTime / 1000)) SPC "Mult";
	}
	return "";
}

function RLPopulateStats() {
	%effectiveMult = LocalClientConnection.scoreMultiplier;
	if ($RL::Curio::Active[8]) {
		// Blue Sparks
		%effectiveMult += 2 * $RL::Curio::Collected;
	}

	if ($RL::Curio::Active[14]) {
		// High Voltage Kit
		%curTime = $Time::ElapsedTime;
		%lastTime = LocalClientConnection.multCountdownEndTime;

		if (%curTime > %lastTime) {
			%remainingTime = 0;
		} else {
			%remainingTime = LocalClientConnection.multCountdownEndTime - %curTime;
		}

		%effectiveMult += mFloor(0.1 * %remainingTime / 1000);
	}

	if ($RL::Curio::Active[4]) {
		// Mine of Misfortune
		%effectiveMult *= (1 + $RL::Curio::MineOfMisfortuneMult);
	}

	if ($RL::Curio::Active[6]) {
		%effectiveMult *= 2;
	}
	%effectiveAdd = $RL::BonusAdd;
	if ($RL::Curio::Active[9]) {
		// Orange Sparks
		%effectiveAdd += 0.25 * $RL::CurrentLevel;
	}

	%text = "<spush><font:32><just:center>Stats\n\n";
	%text = %text @ "<font:24><just:left><tab:30,310>";
	%text = %text @ "[" @ $RL::Blessing::Active[0]  @ "]" TAB "Red Streak Multiplier: " TAB $RL::RedMultAdder @ "\n";
	%text = %text @ "[" @ $RL::Blessing::Active[1]  @ "]" TAB "Yellow Streak Multiplier: " TAB $RL::YellowMultAdder @ "\n";
	%text = %text @ "[" @ $RL::Blessing::Active[2]  @ "]" TAB "Blue Streak Multiplier: " TAB $RL::BlueMultAdder @ "\n";
	%text = %text @ "[" @ $RL::Blessing::Active[3]  @ "]" TAB "Platinum Streak Multiplier: " TAB $RL::PlatinumMultAdder @ "\n";
	%text = %text @ "[" @ $RL::Blessing::Active[4]  @ "]" TAB "Rainbow Streak Multiplier: " TAB $RL::RainbowMultAdder @ "\n";
	%text = %text @ "[" @ $RL::Blessing::Active[5]  @ "]" TAB "Time Limit: " TAB formatTime($RL::TimeLimit * $RL::TimeMult) @ "\n";
	%text = %text @ "[" @ $RL::Blessing::Active[6]  @ "]" TAB "Red Streak Duration: " TAB formatTime($RL::RedMultTimeMult * 10000) @ "\n";
	%text = %text @ "[" @ $RL::Blessing::Active[7]  @ "]" TAB "Yellow Streak Duration: " TAB formatTime($RL::YellowMultTimeMult * 10000) @ "\n";
	%text = %text @ "[" @ $RL::Blessing::Active[8]  @ "]" TAB "Blue Streak Duration: " TAB formatTime($RL::BlueMultTimeMult * 15000) @ "\n";
	%text = %text @ "[" @ $RL::Blessing::Active[3]  @ "]" TAB "Platinum Streak Duration: " TAB formatTime($RL::PlatinumMultTimeMult * 15000) @ "\n";
	%text = %text @ "[" @ $RL::Blessing::Active[10] @ "]" TAB "Rainbow Streak Duration: " TAB formatTime($RL::RainbowMultTimeMult * 10000) @ "\n";
	%text = %text @ "[" @ ($RL::Blessing::Active[11] + $RL::Blessing::Active[12] + $RL::Blessing::Active[13]) @ "]" TAB "Bonus Gem Value: " TAB %effectiveAdd @ "\n";
	%text = %text @ "[" @ $RL::Blessing::Active[14]  @ "]" TAB "Max Gems Per Spawn: " TAB MissionInfo.maxGemsPerSpawn @ "\n";
	%text = %text @ "[" @ $RL::Blessing::Active[14]  @ "]" TAB "Min Gems Per Spawn: " TAB MissionInfo.minGemsPerSpawn @ "\n";
	%text = %text @ "" TAB "Active Multiplier:" TAB %effectiveMult @ "\n";
	// Now for curios
	%text = %text @ "\n<spop><font:32><just:center>Artifacts\n\n";
	%text = %text @ "<font:24><just:left><tab:30>";
	%c = 0;
	for (%i = 0; %i < $RL::Curios + 1; %i++) {
		if ($RL::Curio::Active[%i]) {
			%text = %text @ (%c + 1) @ "." TAB $RL::Curio::Name[%i] @ RLGetArtifactEffects(%i) @ "\n";
			%c++;
		}
	}
	if (%c == 0) {
		%text = %text @ "<just:center>None\n";
	}
	
	BlessingStatsText.setText(%text);
}

function RLApplyReplayFrame() {
	if ($RL::ChoiceType == 1) {
		$RL::CurrentBlessings[0] = $RL::ChoiceIdx;
		RLSelectPassive(1);
	}
	if ($RL::ChoiceType == 2) {
		$RL::CurrentCurios[0] = $RL::ChoiceIdx;
		RLUseCurio(1);
	}
}

function RLReroll() {
	pickBlessings();
	$RL::RerollsAvailable--;
	if ($RL::RerollsAvailable <= 0)
		RLReroll.setActive(0);
	startTransition(BlessingsPickerInner);
}

function getRandomBlessing() {
	%totalWeight = 0;
	for (%i = 0; %i < $RL::Blessings; %i ++) {
		%totalWeight += (6 - $RL::Blessing::Rarity[%i]);
	}
	%rand = getRandom(%totalWeight);
	%curWeight = 0;
	for (%j = 0; %j < $RL::Blessings; %j ++) {
		%curWeight += (6 - $RL::Blessing::Rarity[%j]);
		if (%rand <= %curWeight) {
			return %j;
		}
	}
}

function getRandomCurio() {
	%totalWeight = 0;
	for (%i = 0; %i < $RL::Curios; %i ++) {
		%totalWeight += (6 - $RL::Curio::Rarity[%i]);
	}
	%rand = getRandom(%totalWeight);
	%curWeight = 0;
	for (%j = 0; %j < $RL::Curios; %j ++) {
		%curWeight += (6 - $RL::Curio::Rarity[%j]);
		if (%rand <= %curWeight) {
			return %j;
		}
	}
}

function getRarityColor(%rarity) {
	if (%rarity == 1) {
		return "255 255 255 255";
	}
	if (%rarity == 2) {
		return "158 192 255 255";
	}
	if (%rarity >= 3) {
		return "255 219 99 255";
	}
}

function pickBlessings() {
	// Get 3 random blessings with their rarity weights applied, higher weights are rarer
	%blessings[0] = -1;
	%blessings[1] = -1;
	%blessings[2] = -1;

	%blessingCount = 3;
	if ($RL::Curio::Active[1]) {
		// Sign of Diversity
		%blessingCount = 2;
	}

	// Get 3 unique blessings
	for (%i = 0; %i < %blessingCount; %i ++) {
		%blessing = getRandomBlessing();
		while (%blessing == %blessings[0] 
			|| %blessing == %blessings[1] 
			|| (%blessing == 9 && ($RL::SurpriseCrateCount > 0))) {
			%blessing = getRandomBlessing();
		}
		%blessings[%i] = %blessing;
	}

	%fmt = "<bold:48><color:FFFFFF><just:center><shadowcolor:0000007f><shadow:1:1>";
	%fmtSmall = "<bold:24><just:center>";
	%fmtDesc = "<font:18><just:left>";

	// Set the blessing picker dialog to display the blessings
	BlessingTitle1.setText(%fmtSmall @ $RL::Blessing::Name[%blessings[0]]);
	BlessingTitle2.setText(%fmtSmall @ $RL::Blessing::Name[%blessings[1]]);
	if (%blessingCount == 3) BlessingTitle3.setText(%fmtSmall @ $RL::Blessing::Name[%blessings[2]]);
	BlessingModel1.setModel($userMods @ getWord($RL::Blessing::Model[%blessings[0]], 0), getWord($RL::Blessing::Model[%blessings[0]], 1));
	BlessingModel2.setModel($userMods @ getWord($RL::Blessing::Model[%blessings[1]], 0), getWord($RL::Blessing::Model[%blessings[1]], 1));
	if (%blessingCount == 3) BlessingModel3.setModel($userMods @ getWord($RL::Blessing::Model[%blessings[2]], 0), getWord($RL::Blessing::Model[%blessings[2]], 1));
	BlessingDesc1.setText(%fmtDesc @ $RL::Blessing::Desc[%blessings[0]]);
	BlessingDesc2.setText(%fmtDesc @ $RL::Blessing::Desc[%blessings[1]]);
	if (%blessingCount == 3) BlessingDesc3.setText(%fmtDesc @ $RL::Blessing::Desc[%blessings[2]]);
	RLBlessing1.borderColor = getRarityColor($RL::Blessing::Rarity[%blessings[0]]);
	RLBlessing2.borderColor = getRarityColor($RL::Blessing::Rarity[%blessings[1]]);
	if (%blessingCount == 3) RLBlessing3.borderColor = getRarityColor($RL::Blessing::Rarity[%blessings[2]]);
	$RL::CurrentBlessings[0] = %blessings[0];
	$RL::CurrentBlessings[1] = %blessings[1];
	if (%blessingCount == 3) $RL::CurrentBlessings[2] = %blessings[2];
}

function pickCurios() {
	// Get 2 random curios with their rarity weights applied, higher weights are rarer
	%curios[0] = -1;
	%curios[1] = -1;

	// Get 2 unique curios that we don't have
	for (%i = 0; %i < 2; %i ++) {
		%curio = getRandomCurio();
		while (true) {
			// We shouldn't have this curio either
			if ($RL::Curio::Active[%curio]) {
				%curio = getRandomCurio();
				continue;
			}
			if (%curio == %curios[0] || %curio == %curios[1]) {
				%curio = getRandomCurio();
				continue;
			}
			break;
		}
		%curios[%i] = %curio;
	}

	%fmt = "<bold:48><color:FFFFFF><just:center><shadowcolor:0000007f><shadow:1:1>";
	%fmtSmall = "<bold:24><just:center>";
	%fmtDesc = "<font:19><just:left>";

	// Set the curio picker dialog to display the curio
	CurioTitle1.setText(%fmtSmall @ $RL::Curio::Name[%curios[0]]);
	CurioTitle2.setText(%fmtSmall @ $RL::Curio::Name[%curios[1]]);
	CurioModel1.setModel($userMods @ getWord($RL::Curio::Model[%curios[0]], 0), getWord($RL::Curio::Model[%curios[0]], 1));
	CurioModel2.setModel($userMods @ getWord($RL::Curio::Model[%curios[1]], 0), getWord($RL::Curio::Model[%curios[1]], 1));
	CurioDesc1.setText(%fmtDesc @ $RL::Curio::Desc[%curios[0]]);
	CurioDesc2.setText(%fmtDesc @ $RL::Curio::Desc[%curios[1]]);
	RLCurio1.borderColor = getRarityColor($RL::Curio::Rarity[%curios[0]]);
	RLCurio2.borderColor = getRarityColor($RL::Curio::Rarity[%curios[1]]);
	$RL::CurrentCurios[0] = %curios[0];
	$RL::CurrentCurios[1] = %curios[1];
}

function RLSelectPassive(%idx) {
	// Apply the blessing
	%curBlessing = $RL::CurrentBlessings[%idx - 1];

	if (!$playingDemo && $Record::Recording) {
		$RL::ChoiceType = 1; // 1 = Upgrade, 2 = Curio
		$RL::ChoiceIdx = %curBlessing;
		recordWriteScores();
	}

	// Hardcoded switch case for all effects
	switch (%curBlessing) {
		case 0: $RL::RedMultAdder += 0.5;
		case 1: $RL::YellowMultAdder += 0.5;
		case 2: $RL::BlueMultAdder += 1;
		case 3: $RL::PlatinumMultAdder += 2; $RL::PlatinumMultTimeMult += 0.5;
		case 4: $RL::RainbowMultAdder += 1;
		case 5: $RL::TimeMult += 0.05;
		case 6: $RL::RedMultTimeMult += 0.25;
		case 7: $RL::YellowMultTimeMult += 0.25;
		case 8: $RL::BlueMultTimeMult += 0.5;
		case 9: 
			if (LocalClientConnection.heldPowerup $= "" || LocalClientConnection.heldPowerup == 0) {
				// Give the player a random powerupm
				%pupIdx = getRandom(1, 3);
				switch (%pupIdx) {
				case 1:
					%pup = SuperJumpItem;
				case 2:
					%pup = SuperSpeedItem;
				case 3:
					%pup = HelicopterItem;
				}
				// PQ suffix
				%pup = %pup @ "_PQ";
				PowerUp::OnPickup(%pup.getId(), ItemGroup.getObject(0), LocalClientConnection.player, 1); // huge hacks
				$RL::SurpriseCrateCount = 2;
			}

		case 10: $RL::RainbowMultTimeMult += 0.25;
		case 11: $RL::BonusAdd += 1;
		case 12: $RL::BonusAdd += 3;
		case 13: $RL::BonusAdd += 5;
		case 14:
			MissionInfo.maxGemsPerSpawn++;
			MissionInfo.minGemsPerSpawn++;
	}

	$RL::Blessing::Active[%curBlessing] += 1;

	$RL::CurrentUpgradeCount --;

	if ($playingDemo)
		return;

	if ($RL::CurrentUpgradeCount == 0) {
		$gamePaused = false;
		LocalClientConnection.player.setMode(Normal);
		Canvas.popDialog(BlessingsPickerDlg);
		Time::start();
		Time::set($RL::TimeLimit * $RL::TimeMult);
		PlayGui.isAlarmActive = false;
		if (alxIsPlaying($PlayTimerAlarmHandle))
			alxStop($PlayTimerAlarmHandle);
		schedule(100, 0, tryCancelAlarm); // Bruh

		if ($RL::Curio::Active[1] && $RL::SignOfDiversityTimes == 0) {
			$RL::Curio::Active[1] = 0;
			$RL::UpgradeCount = 1;
			LocalClientConnection.addBubbleLine("Artifact Sign of Diversity has been destroyed!");
		}
	} else {
		pickBlessings();

		if ($RL::Curio::Active[2]) { 
			// Sign of Greed
			$RL::RerollsAvailable = 2;
		} else {
			$RL::RerollsAvailable = 1;
		}

		RLReroll.setActive(1);
		startTransition(BlessingsPickerInner);
	}
}

function tryCancelAlarm() {
	PlayGui.isAlarmActive = false;
	if (alxIsPlaying($PlayTimerAlarmHandle))
		alxStop($PlayTimerAlarmHandle);
}

function RLUseCurio(%idx) {
	%idx = $RL::CurrentCurios[%idx - 1];

	if (!$playingDemo && $Record::Recording) {
		$RL::ChoiceType = 2; // 1 = Upgrade, 2 = Curio
		$RL::ChoiceIdx = %idx;
		recordWriteScores();
	}

	switch (%idx) {
		case 1: // Sign of Diversity
			$RL::UpgradeCount = 2;
			$RL::SignOfDiversityTimes = 2;
		case 4: // Mine of Misfortune
			// Count all the blessings used
			%blessingsUsed = 0;
			for (%i = 0; %i < $RL::Blessings; %i ++) {
				%blessingsUsed += $RL::Blessing::Active[%i];
			}
			// Reset all the blessings
			resetBlessings();
			$RL::Curio::MineOfMisfortuneMult += %blessingsUsed * 0.2;
			$RL::Curio::MineOfMisfortuneMult = min(2, $RL::Curio::MineOfMisfortuneMult);
		case 6: // Easter Egg
			$RL::EasterEggRandomLevels = 3;
		case 7:  // Alien Spaceship
			Physics::pushLayerName("spaceship");
		case 11: // Time capsule
			$RL::TimeLimit -= 10000;
			$RL::RedMultAdder += min(20, $RL::RedMultAdder * 3);
			$RL::YellowMultAdder += min(20, $RL::YellowMultAdder * 3);
			$RL::BlueMultAdder += min(20, $RL::BlueMultAdder * 3);
			$RL::PlatinumMultAdder += min(20, $RL::PlatinumMultAdder * 3);
			$RL::RainbowMultAdder += min(20, $RL::RainbowMultAdder * 3);

		case 12: // Time machine
			$RL::TimeLimit -= 10000;
			$RL::CurrentLevel = max($RL::CurrentLevel - 10, 0);

		case 13:
			MissionInfo.blast = true;
			$RL::Curios = 16; // Show Blast Battery

		case 15:
			$MP::PartyTripleBlast = true; // Enable Triple Blast
	}
	$RL::Curio::Active[%idx] = 1;
	$RL::Curio::Collected += 1;

	if ($playingDemo)
		return;

	Canvas.popDialog(CurioPickerDlg);
	showBlessingPicker();
}

function resetBlessings() {
	// Reset all the passive bonuses to their default values
	$RL::RedMultAdder = 0.5;
	$RL::YellowMultAdder = 0.5;
	$RL::BlueMultAdder = 1;
	$RL::PlatinumMultAdder = 2;
	$RL::RainbowMultAdder = 1;
	$RL::RedMultTimeMult = 1;
	$RL::YellowMultTimeMult = 1;
	$RL::BlueMultTimeMult = 1;
	$RL::PlatinumMultTimeMult = 1;
	$RL::RainbowMultTimeMult = 1;
	$RL::TimeMult = 1;
	$RL::BonusAdd = 0;
	$RL::TimeLimit = 35000;
	$RL::SurpriseCrateCount = 0;
	MissionInfo.maxGemsPerSpawn = 8;
	MissionInfo.minGemsPerSpawn = 3;
	// Reset the counters for blessings
	for (%i = 0; %i < $RL::Blessings; %i ++) {
		$RL::Blessing::Active[%i] = 0;
	}
}

function resetCurios() {
	$RL::Curio::Collected = 0;
	$RL::UpgradeCount = 1;
	$RL::SignOfDiversityTimes = 0;
	$RL::Curio::MineOfMisfortuneMult = 0;
	$RL::Curios = 15;
	for (%i = 0; %i < $RL::Curios + 1; %i ++) { // Need to count extra for Blast Battery
		$RL::Curio::Active[%i] = 0;
	}
	Physics::setProperty("maxRollVelocity", 15);
	Physics::setProperty("angularAcceleration", 75);
	Physics::setProperty("brakingAcceleration", 30);
	Physics::setProperty("airAcceleration", 5);
	Physics::setProperty("jumpImpulse", 7.5);
	MissionInfo.blast = false;
	$MP::PartyTripleBlast = false;
}

function tryIncreaseLevel() {
	if ($RL::CurrentLevel == 60) {
		// Just end
		endGameSetup();
		return;
	}
	if (LocalClientConnection.gemCount >= $RLGemTargets[$RL::CurrentLevel]) {
		// Increase level, show blessing picker, pause game, and subtract the gems
		$RL::CurrentLevel ++;
		LocalClientConnection.gemCount -= $RLGemTargets[$RL::CurrentLevel - 1];
		if ($RL::Curio::Active[3]) {
			// Gold Coin of Fortune
			LocalClientConnection.gemCount += mFloor(0.1 * $RLGemTargets[$RL::CurrentLevel]);
		}
		if ($RL::EasterEggRandomLevels > 0) {
			$RL::EasterEggRandomLevels --;
			if ($RL::EasterEggRandomLevels == 0) {
				$RL::Curio::Active[6] = false;
				LocalClientConnection.addBubbleLine("Artifact Easter Egg has been destroyed!");
			}
		}
		RLTargetText.setVisible(true);
		RLTargetText.setText("<font:32><color:FFFFFF>Score: " @ mRound(LocalClientConnection.gemCount, 2) NL "Target: " @ $RLGemTargets[$RL::CurrentLevel]);
		PlayGui.updateGems();
		if (!$playingDemo) {
			Time::stop();
			LocalClientConnection.player.setMode(Victory);
			schedule(1000, 0, pushLevelIncreaseBox);
		}
		LocalClientConnection.addBubbleLine("Target reached! Level increased to " @ $RL::CurrentLevel @ "!");

		if ($playingDemo)
			return;

		if ($RL::SurpriseCrateCount > 0) {
			if (LocalClientConnection.heldPowerup $= "" || LocalClientConnection.heldPowerup == 0) {
				// Give the player a random powerup
				%pupIdx = getRandom(1, 3);
				switch (%pupIdx) {
				case 1:
					%pup = SuperJumpItem;
				case 2:
					%pup = SuperSpeedItem;
				case 3:
					%pup = HelicopterItem;
				}
				// PQ suffix
				%pup = %pup @ "_PQ";
				PowerUp::OnPickup(%pup.getId(), ItemGroup.getObject(0), LocalClientConnection.player, 1); // huge hacks
				$RL::SurpriseCrateCount--;
			}
		}
	}
}

function pushLevelIncreaseBox() {
	$gamePaused = true;
	if ($RL::CurrentLevel % 5 == 0) {
		// Show curio picker
		pickCurios();
		Canvas.pushDialog(CurioPickerDlg);
		startTransition(CurioPickerInner);
	} else {
		showBlessingPicker();
	}
}

function showBlessingPicker() {
	$RL::CurrentUpgradeCount = $RL::UpgradeCount;
	if ($RL::Curio::Active[2]) { 
		// Sign of Greed
		$RL::RerollsAvailable = 2;
	} else {
		$RL::RerollsAvailable = 1;
	}
	if ($RL::Curio::Active[1]) {
		setupBlessingsPicker(2);
		$RL::SignOfDiversityTimes --;
	} else {
		setupBlessingsPicker(3);
	}

	pickBlessings();
	RLReroll.setActive(1);
	Canvas.pushDialog(BlessingsPickerDlg);
	startTransition(BlessingsPickerInner);
}
 
function startTransition(%dlg) {
	%width = getWord(getResolution(),0);
	%height = getWord(getResolution(),1);

	%dlg.transitionY = %height;
	%dlg.setPosition(mFloor(%width / 2 - 325) SPC %dlg.transitionY);
	%dlg.transitionSchedule = scheduleIgnorePause(10, "transitionTick", %dlg);
	%dlg.progress = 0;
	%dlg.targetY = mFloor(%height / 2 - 275);
}

function transitionTick(%dlg) {
	// 10ms have passed
	%dlg.progress += 0.05;
	%y = easeFrom(%dlg.transitionY, %dlg.targetY, %dlg.progress);
	%dlg.setPosition(mFloor(getWord(%dlg.getPosition(),0)) SPC mFloor(%y));
	if (%dlg.progress < 1) {
		%dlg.transitionSchedule = scheduleIgnorePause(10, "transitionTick", %dlg);
	} else {
		cancelIgnorePause(%dlg.transitionSchedule);
	}
}

function serverCbOnMissionLoaded() {
	if (!$RogueLikeHunt) {
		echo("Activating Special Hunt Game Mode");
		activatePackage(RogueLike);
		$RogueLikeHunt = true;
		$RL::PanicReset =  $pref::panicMusic;
		$pref::panicMusic = false;
	}
}

function serverCbOnMissionEnded() {
	if ($RogueLikeHunt) {
		echo("Deactivating Special Hunt Game Mode");
		deactivatePackage(RogueLike);
		$RogueLikeHunt = false;
		$pref::panicMusic = $RL::PanicReset;

		GemDot1.setVisible(false); // I guess they'll stay there
		GemDot2.setVisible(false); 
		GemDot3.setVisible(false); 
		GemDot4.setVisible(false); 
		RLTargetText.setVisible(false);
		RLTargetText.setText(""); // Keep it there I guess
		RL_ShowGem.setVisible(false);
		
	}
}

function clientCbOnRespawn() {
	if ($RL::Curio::Active[7]) {
		schedule(200, 0, applyMovementBuff);
	}
}

function applyMovementBuff() {
	// Alien spaceship
	Physics::pushLayerName("spaceship");
}

function serverCbOnMissionReset() {
	for (%i = 0; %i < ClientGroup.getCount(); %i ++) {
		%client = ClientGroup.getObject(%i);
		// Set their default variables
		resetMultGems(%client);
		resetMultipliers(%client);
		cancel(%client.multCountdown);
		%client.multCountdownEndTime = "";
	}
	buildGemDots();
	buildBlessingsPicker();
	if (isObject(LocalClientConnection))
		updateGemDots(LocalClientConnection);

	if (!isObject($Physics::NamedLayer["spaceship"])) {
		Physics::registerLayer("spaceship",
                       "maxRollVelocity 17.5 17.5" NL
                       "angularAcceleration 90 90" NL
                       "airAcceleration 9 9" NL
					   "brakingAcceleration 40 40" NL
					   "jumpImpulse 9 9"
                      );
	}

	$RL::CurrentLevel = 0;
	$RL::ChoiceIdx = 0;
	resetBlessings();
	resetCurios();

	RLTargetText.setVisible(true);
	RLTargetText.setText("<font:32><color:FFFFFF>Target:" SPC $RLGemTargets[0]);
	RL_ShowGem.setVisible(true);
	RL_ShowGem.setModel($usermods @ "/data/shapes_pq/gameplay/gems/gem.dts", "platinum");

	Canvas.popDialog(BlessingsPickerDlg);
	Canvas.popDialog(CurioPickerDlg);
}

function clientCbOnFrameAdvance(%delta) {
	// Update the Gem UIs
	if (!isObject(ServerConnection) || !isObject(LocalClientConnection.player) || !isObject($MP::MyMarble))
		return;

	%trans = $MP::MyMarble.getCameraTransform();

	//Get the position of the side of the marble for us to position the bars relative to it
	%obj = ServerConnection.getControlObject();
	%rad = (%obj.getClassName() $= "Marble" ? %obj.getCollisionRadius() : 0.5);
	%mpos = %obj.getPosition();
	%rpos = VectorAdd(%mpos, RotMulVector(MatrixRot(%trans), %rad SPC "0 0"));

	%mpix = getPixelSpace(getGuiSpace(%trans, %mpos, getCameraFov()));
	%rpix = getPixelSpace(getGuiSpace(%trans, %rpos, getCameraFov()));

	//Offset a bit so we don't cover the marble and so we line up
	%x = getWord(%rpix, 0) - 70;
	%y = getWord(%mpix, 1) - 80;

	GemDot1.setPosition((%x - 24) SPC %y);
	GemDot2.setPosition((%x - 8) SPC %y);
	GemDot3.setPosition((%x + 8) SPC %y);
	GemDot4.setPosition((%x + 24) SPC %y);

	if ($Time::CurrentTime < 500) {
		if ($RL::Curio::Active[5]) {
			// Prehistoric shard
			$RL::Curio::Active[5] = false;
			LocalClientConnection.addBubbleLine("Artifact Prehistoric Shard has been destroyed!");
			// Increase level lmao
			LocalClientConnection.gemCount = $RLGemTargets[$RL::CurrentLevel];
			tryIncreaseLevel();
		}
	}
}

function RLShowRunStats() {
	if ($RogueLikeHunt) {
		RLPopulateStats(); 
		Canvas.pushDialog(BlessingStatsDlg);
	}
}

function clientCbOnEndGameSetup() {
	// Change the score to be something more suitable for this game-mode
	// How about 100 * currentLevel + percentage to next level * 100
	%curLevelScore = $RL::CurrentLevel * 100;
	%percToNextLevel = mFloor((LocalClientConnection.gemCount / $RLGemTargets[$RL::CurrentLevel]) * 100);
	LocalClientConnection.gemCount = mFloor(%curLevelScore + %percToNextLevel);
	// schedule the thing to show the run stats
	schedule(3000, 0, RLShowRunStats);
}

//--- OBJECT WRITE BEGIN ---
new SimGroup(MissionGroup) {
	new ScriptObject(MissionInfo) {
		name = "Gravity Tower - Roguelike";
		type = "Custom";
		level = "1000";
		desc = "Try out this new spin on the hunt game mode.\nPlease consult the Hints section for Gameplay Mechanics and details.";
		artist = "Alex Swanson, Game Mode by RandomityGuy";
		music = "Upbeat Freedom.ogg";
		game = "PlatinumQuest";
		gameMode = "Hunt";
		generalHint = "Welcome to Roguelike Gem Hunt.\n\nYour score is now affected by multipliers which you gain by performing streaks.\nStreaks are performed by collecting the colored gems in the following order:\nRed Streak: 4 Reds\nYellow Streak: 4 Yellows\nBlue Streak: 3 Blues\nPlatinum: 2 Platinums\nRainbow Streak: RYB, or BYR, in that order.\nThere is a timer which tells you how long your active multiplier lasts, which stacks if you perform streaks before the time runs out.\n\nYou can also upgrade various parts of the gameplay mechanics every time you level up.\nAdditionally, after every 5 levels, you can collect an artifact to spice things up.\nArtifact effects are persistent when held unless described explicitly.\n\nYour final score is calculated as:\nFirst two digits: the level you reached.\nLast two digits: percentage progress towards the next level.\nSo a score of 4215 would be interpreted as:\nReached level 42 with 15% progress towards the next level.\n\nGem value formula:\n(Original Gem Value + Bonus Value) * Active Multiplier * Global Multiplier.\n";
		Time = "35000";
		score = "1000";
		platinumScore = "1500";
		ultimateScore = "2500";
		awesomeScore = "3800";
		maxGemsPerSpawn = "7";
		radiusFromGem = "15";
		CustomRadarRule = $Radar::Flags::Gems | $Radar::Flags::TimeTravels | $Radar::Flags::Powerups;
		alarmStartTime = "20";
		easterEgg = "0";
	};
	new SimGroup(MissionData) {

		new MissionArea(MissionArea) {
			area = "-360 -648 720 1296";
			flightCeiling = "300";
			flightCeilingRange = "20";
				locked = "true";
		};
		new Sky(Sky) {
			position = "336 136 0";
			rotation = "1 0 0 0";
			scale = "1 1 1";
			cloudHeightPer[0] = "0";
			cloudHeightPer[1] = "0";
			cloudHeightPer[2] = "0";
			cloudSpeed1 = "0.0001";
			cloudSpeed2 = "0.0002";
			cloudSpeed3 = "0.0003";
			visibleDistance = "500";
			useSkyTextures = "1";
			renderBottomTexture = "1";
			SkySolidColor = "0.600000 0.600000 0.600000 1.000000";
			fogDistance = "300";
			fogColor = "0.600000 0.600000 0.600000 1.000000";
			fogVolume1 = "-1 7.45949e-31 1.3684e-38";
			fogVolume2 = "-1 1.07208e-14 8.756e-14";
			fogVolume3 = "-1 5.1012e-10 2.05098e-08";
			materialList = "~/data/skies_pq/blender3/blender3.dml";
			windVelocity = "1 0 0";
			windEffectPrecipitation = "0";
			noRenderBans = "1";
			fogVolumeColor1 = "128.000000 128.000000 128.000000 0.000000";
			fogVolumeColor2 = "128.000000 128.000000 128.000000 0.000004";
			fogVolumeColor3 = "128.000000 128.000000 128.000000 14435505.000000";
		};
		new Sun(Sun1) {
			direction = "0.638261 0.459006 -0.61801";
			color = "1.400000 1.200000 0.400000 1.000000";
			ambient = "0.300000 0.300000 0.400000 1.000000";
		};
	};
	new SimGroup(PathNodeGroup) {

		new StaticShape(CameraPath1) {
			position = "5.16465 -6.30398 -95.6168";
			rotation = "-0.674291 -0.295884 -0.676597 65.931";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath2";
				timeToNext = "3000";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
		new StaticShape(CameraPath2) {
			position = "1.51884 -5.70139 -89.8342";
			rotation = "-0.900495 -0.250602 -0.355396 76.1255";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath3";
				timeToNext = "3700";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
		new StaticShape(CameraPath3) {
			position = "-1.64828 -4.2319 -80.9174";
			rotation = "-0.996327 -0.0519267 -0.0680863 74.8661";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath4";
				timeToNext = "0";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
		new StaticShape(CameraPath4) {
			position = "-6.19589 5.65083 -1.8291";
			rotation = "0.26642 -0.619532 0.738377 144.768";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath5";
				timeToNext = "4000";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
		new StaticShape(CameraPath5) {
			position = "-5.63354 5.73709 22.9234";
			rotation = "0.251026 -0.614758 0.747702 146.044";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath6";
				timeToNext = "0";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
		new StaticShape(CameraPath6) {
			position = "-5.34052 -2.12549 46.151";
			rotation = "-0.20496 0.573319 0.793282 148.334";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath7";
				timeToNext = "3500";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
		new StaticShape(CameraPath7) {
			position = "1.77308 -2.89706 58.6522";
			rotation = "0.04477 0.634457 0.771661 186.234";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath8";
				timeToNext = "2500";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
		new StaticShape(CameraPath8) {
			position = "3.01017 -2.77716 66.7977";
			rotation = "0.223211 0.637005 0.737836 216.744";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "CameraPath1";
				timeToNext = "0";
				usePosition = "1";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				placed = "1";
		};
		new StaticShape(BottomArrow3) {
			position = "0 25 -2";
			rotation = "0 0 1 90";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "BottomArrow1";
				timeToNext = "4000";
				Smooth = "0";
				usePosition = "0";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				RotationMultiplier = "1";
				placed = "1";
		};
		new StaticShape(BottomArrow2) {
			position = "0 20 -2";
			rotation = "0 0 1 90";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "BottomArrow3";
				timeToNext = "0";
				Smooth = "0";
				usePosition = "0";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				RotationMultiplier = "1";
				placed = "1";
		};
		new StaticShape(BottomArrow1) {
			position = "0 15 -2";
			rotation = "0 0 -1 90";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "BottomArrow2";
				timeToNext = "4000";
				Smooth = "0";
				usePosition = "0";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				RotationMultiplier = "1";
				placed = "1";
		};
		new StaticShape(TopArrow3) {
			position = "0 25 -2";
			rotation = "0 0 1 90";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "TopArrow1";
				timeToNext = "4000";
				Smooth = "0";
				usePosition = "0";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				RotationMultiplier = "1";
				placed = "1";
		};
		new StaticShape(TopArrow2) {
			position = "0 20 -2";
			rotation = "0 0 1 90";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "TopArrow3";
				timeToNext = "0";
				Smooth = "0";
				usePosition = "0";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				RotationMultiplier = "1";
				placed = "1";
		};
		new StaticShape(TopArrow1) {
			position = "0 15 -2";
			rotation = "0 0 -1 90";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "TopArrow2";
				timeToNext = "4000";
				Smooth = "0";
				usePosition = "0";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "0";
				RotationMultiplier = "1";
				placed = "1";
		};
		new StaticShape(BottomCircle3) {
			position = "0 25 -2";
			rotation = "0 0 1 90";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "BottomCircle1";
				timeToNext = "4000";
				Smooth = "0";
				usePosition = "0";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "1";
				RotationMultiplier = "1";
				placed = "1";
		};
		new StaticShape(BottomCircle2) {
			position = "0 20 -2";
			rotation = "0 0 1 90";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "BottomCircle3";
				timeToNext = "0";
				Smooth = "0";
				usePosition = "0";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "1";
				RotationMultiplier = "1";
				placed = "1";
		};
		new StaticShape(BottomCircle1) {
			position = "0 15 -2";
			rotation = "0 0 -1 90";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "BottomCircle2";
				timeToNext = "4000";
				Smooth = "0";
				usePosition = "0";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "1";
				RotationMultiplier = "1";
				placed = "1";
		};
		new StaticShape(TopCircle3) {
			position = "0 25 -2";
			rotation = "0 0 1 90";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "TopCircle1";
				timeToNext = "4000";
				Smooth = "0";
				usePosition = "0";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "1";
				RotationMultiplier = "1";
				placed = "1";
		};
		new StaticShape(TopCircle2) {
			position = "0 20 -2";
			rotation = "0 0 1 90";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "TopCircle3";
				timeToNext = "0";
				Smooth = "0";
				usePosition = "0";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "1";
				RotationMultiplier = "1";
				placed = "1";
		};
		new StaticShape(TopCircle1) {
			position = "0 15 -2";
			rotation = "0 0 -1 90";
			scale = "1 1 1";
			dataBlock = "PathNode";
				nextNode = "TopCircle2";
				timeToNext = "4000";
				Smooth = "0";
				usePosition = "0";
				useRotation = "1";
				useScale = "0";
				reverseRotation = "1";
				RotationMultiplier = "1";
				placed = "1";
		};
	};
	new SimGroup(InteriorGroup) {

		new InteriorInstance(BottomCircle) {
			position = "0 0 -96.75";
			rotation = "0 0 1 90.0002";
			scale = "1 1 1";
			interiorFile = "~/data/interiors_pq/intermediate/GravityTowerRings.dif";
			showTerrainInside = "0";
				initialPathPosition = "0 0 -96.75 0 0 0.9999999 1.475801";
				initialPathScale = "1 1 1";
				Path = "BottomCircle1";
		};
		new InteriorInstance(BottomArrow) {
			position = "0 0 -96.75";
			rotation = "0 0 -1 90.0002";
			scale = "1 1 1";
			interiorFile = "~/data/interiors_pq/intermediate/GravityTowerArrow.dif";
			showTerrainInside = "0";
				initialPathPosition = "0 0 -96.75 0 0 1 1.665824";
				initialPathScale = "1 1 1";
				Path = "BottomArrow1";
		};
		new InteriorInstance(TopArrow) {
			position = "0 0 96.75";
			rotation = "0 0 -1 90.0002";
			scale = "1 1 1";
			interiorFile = "~/data/interiors_pq/intermediate/GravityTowerArrow.dif";
			showTerrainInside = "0";
				initialPathPosition = "0 0 96.75 0 0 1 1.665824";
				initialPathScale = "1 1 1";
				Path = "TopArrow1";
		};
		new InteriorInstance(TopCircle) {
			position = "0 0 96.75";
			rotation = "0 0 1 90.0002";
			scale = "1 1 1";
			interiorFile = "~/data/interiors_pq/intermediate/GravityTowerRings.dif";
			showTerrainInside = "0";
				initialPathPosition = "0 0 96.75 0 0 0.9999999 1.475801";
				initialPathScale = "1 1 1";
				Path = "TopCircle1";
		};
		new InteriorInstance() {
			position = "0 0 0";
			rotation = "1 0 0 0";
			scale = "1 1 1";
			interiorFile = "~/data/interiors_pq/intermediate/GravityTower.dif";
			showTerrainInside = "0";
		};
	};
	new SimGroup(SpawnPointGroup) {
	};
	new Trigger() {
		position = "-1 -5 -87";
		rotation = "1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-5 -3 -93";
		rotation = "0.707107 0 0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-5 1 -79";
		rotation = "0.707107 0 0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-0.8 5 -93";
		rotation = "-1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-5 2 -31";
		rotation = "0.707107 0 0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "2 5 -65";
		rotation = "-1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-1 5 -27";
		rotation = "-1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "5 0 -73";
		rotation = "0.707107 0 -0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "5 0 -31";
		rotation = "0.707107 0 -0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-6 -5 -48";
		rotation = "1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-3 -5 -25";
		rotation = "1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-1 -4.5 -7";
		rotation = "1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "3 -5 1";
		rotation = "1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-1 -5 15";
		rotation = "1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "4.5 1 -11";
		rotation = "0.707107 0 -0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "5 -1 -1";
		rotation = "0.707107 0 -0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "5 -1 -17";
		rotation = "0.707107 0 -0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "5 5 13";
		rotation = "0.707107 0 -0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "5 -1 25";
		rotation = "0.707107 0 -0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-1 5 9";
		rotation = "-1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "3 5 3";
		rotation = "-1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "1 5 -9";
		rotation = "-1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-5 -3 19";
		rotation = "0.707107 0 0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "3 5 21";
		rotation = "-1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-5 2 -6";
		rotation = "0.707107 0 0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-5 -3 -1";
		rotation = "0.707107 0 0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-3 -2 -62";
		rotation = "0.707107 0 0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-3 -6 44";
		rotation = "0.707107 0 0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-5 1 -17";
		rotation = "0.707107 0 0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "3 -2 52";
		rotation = "0.707107 0 -0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-2 5 62";
		rotation = "-1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "1 5 89";
		rotation = "-1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "5 -1 85";
		rotation = "0.707107 0 -0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "0 -5 90";
		rotation = "1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-5 1 86";
		rotation = "0.707107 0 0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "2 -5 48";
		rotation = "1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-3 -5 -73";
		rotation = "1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "1 -5 -93";
		rotation = "1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "1 -5 -93";
		rotation = "1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "5 1 -91";
		rotation = "0.707107 0 -0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-2 5 -81";
		rotation = "-1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "5 -5 -81";
		rotation = "0.707107 0 -0.707107 180";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new Trigger() {
		position = "-3 -5 -73";
		rotation = "1 0 0 90";
		scale = "1 1 1";
		dataBlock = "SpawnTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
			add = "0 0 0";
			gravity = "1";
	};
	new SimGroup(ItemGroup) {

		new Item() {
			position = "-7.96 0 85";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "HelicopterItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "0 -7.96 -86.5";
			rotation = "0.579053 -0.576497 -0.576497 119.915";
			scale = "1 1 1";
			dataBlock = "HelicopterItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "8 -5 -87";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "SuperSpeedItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-8 -3 7";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "SuperSpeedItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-3 7.789 91";
			rotation = "0.579054 0.576497 0.576497 119.854";
			scale = "1 1 1";
			dataBlock = "SuperSpeedItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-1 7.788 -87";
			rotation = "0.579054 0.576497 0.576497 119.854";
			scale = "1 1 1";
			dataBlock = "SuperSpeedItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-7.46 -2.5 -89";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "HelicopterItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "8 1 87";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "SuperSpeedItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "3.8 -8 91";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "SuperSpeedItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "7.2 -7.2 1";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-6.7 -7.2 1";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-7.2 7.2 1";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "7.2 7.2 1";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "7.2 7.2 -91";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-7.2 -7.2 -91";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-7.2 7.2 -91";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "7.2 -7.2 -91";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "7.2 -7.2 89";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-7.2 -7.2 89";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-7.2 7.2 89";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "7.2 7.2 89";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-6.7 -6.7 -1";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-6.7 7.2 -1";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "7.2 6.7 -1";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "7.2 -7.2 -1";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-7.25 7.2 79";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-7.2 -7.2 79";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "7.2 -7.2 79";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-7.25 7.2 -79";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-7.2 -7.2 -79";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "7.2 -7.2 -79";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-7.2 7.25 -53";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-7.2 -7.2 -53";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "7.2 -7.2 -53";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-7.25 7.2 -31";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-7.2 -7.2 -31";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "7.2 -7.2 -31";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-7.25 7.2 31";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-7.2 -7.2 31";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "7.2 -7.2 31";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-7.25 6 53";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "-6 -7.2 53";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "7.2 -5.9 53";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "6 7.2 53";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "7.2 7.2 31";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "7.2 7.2 -31";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "7.2 7.2 -53";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "4.91 7.2 -79";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
		new Item() {
			position = "7.2 7.2 79";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "NoRespawnAntiGravityItem_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
		};
	};
	new SimGroup(GemGroup) {

		new Item() {
			position = "-2 -8 -35";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-2 -6 -53";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemPlatinum_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "2 -6.75 -61";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "6.5 2 -66";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "7.95 -2 -56";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "8 2 -50";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "6 -2 -45";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemPlatinum_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-2 6 -63";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "2 8 -62";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "2 6.75 -53";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemPlatinum_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-2 8 -49";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-6.5 -2 -56";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-6.5 2 -42";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-7 -2 -46";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemPlatinum_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-7 2 -62";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "2 -7 -42";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "8 -5 55";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "8 2 56";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "6.25 5 41";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-5 6.75 53";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "2 6.25 49";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-2 8 53";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemPlatinum_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "6 6.5 62";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-6.75 -5 53";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-7 -2 44";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemPlatinum_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-6 2 47";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-8 5 55";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-2 -7.95 64";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "5 -7.75 57";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-5 -6.25 65";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "2 -6 61";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemPlatinum_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "6.75 -1 45";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemPlatinum_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-3 -8 81";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-3 -7.5 85";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-1 -7.5 87";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "3 -7.5 81";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "1 -7.5 83";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-1 -7 83";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "1 -7 85";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "8 6 88";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-1.5 8 79";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-5.5 8 83";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-3 8 87";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "3 8 89";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "5 8 83";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "1 7 83";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-1 7 85";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "1 7.5 81";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-3 7.5 81";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "3 7.5 85";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "1 7.5 87";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "1 6 91";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemPlatinum_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-1 -6 85";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-6 -8 -84";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-4 -8 -92";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "2 -8 -82";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "6 8 -90";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "2 8 -92";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-4 8 -88";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-8 -5 -89";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-8 5.5 -87.5";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-8 3.5 -89";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-8 -2.5 -83";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-7.5 -2.5 -87";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-7.5 -0.5 -89";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-7.5 3.5 -83";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-7.5 1.5 -85";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-7 -0.5 -85";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-7 1.5 -87";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "8 -1 -81";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "8 -5 -85";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "8 -2.5 -89";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "8 3.5 -91";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "8 5.5 -85";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "7 1.5 -85";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "7 -0.5 -87";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "7.5 1.5 -83";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "7.5 -2.5 -83";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "7.5 3.5 -87";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "7.5 1.5 -89";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "6 1.5 -93";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-6 -0.5 -87";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-5.5 -8 87";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-8 6 88";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "8 2 80";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "8 -4 90";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "3 -8 87";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-8 2 90";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-8 -4 86";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "5 -8 85.5";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-7.5 -5 1";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "7.5 5 19";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "7.5 5 7";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "7.5 -1 3";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "7.5 7 -5";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "7.5 -7 -7";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "7.5 3 -11";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "7.5 -1 -13";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-3 -6 -3";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemPlatinum_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "1 6 1";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemPlatinum_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-5 7.5 -11";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "7 7.5 -3";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "1 7.5 -3";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-1 7.5 7";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "5 7.5 9";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-5 8 -3";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "3 8 -7";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "5 8 5";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-5 8 3";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "1 8 17";
			rotation = "-1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-5 -8 15";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-1 -8 9";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "5 -8 3";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-1 -8 -5";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "3 -8 -19";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "5 -7.5 -13";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "3 -7.5 -3";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-5 -7.5 -1";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-5 -7.5 7";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-1 -7.5 3";
			rotation = "1 0 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "8 3 15";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "8 1 9";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "8 -3 -3";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "8 5 -7";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "8 -3 -21";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemBlue_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-8 -1 -13";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-8 3 -15";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-8 -3 11";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-8 5 7";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-8 -3 3";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-8 5 -5";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-7.5 3 -3";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-7.5 5 -1";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-7.5 7 -17";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-7.5 1 -9";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-7.5 7 11";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "-7.5 3 3";
			rotation = "0 -1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemRed_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
		new Item() {
			position = "8 -5 82";
			rotation = "0 1 0 90";
			scale = "1 1 1";
			dataBlock = "GemItemYellow_PQ";
			collideable = "0";
			static = "1";
			rotate = "1";
				noParticles = "0";
		};
	};
	new StaticShape(CameraPath1_Handle2) {
		position = "5.16465 -6.30398 -95.6168";
		rotation = "0.838864 -0.344124 0.421764 197.745";
		scale = "1 1 1";
		dataBlock = "BezierHandle";
			Parent = "CameraPath1";
			parentModTrans = "0 0 0 -0.527415 0.546097 -0.650855 2.01924";
			parentOffset = "0 0 0";
			parentTransform = "0 0 0 -0.527415 0.546097 -0.650855 2.01924";
	};
	new StaticShape(CameraPath1_Handle1) {
		position = "5.16465 -6.30398 -95.6168";
		rotation = "0.838864 -0.344124 0.421764 197.745";
		scale = "1 1 1";
		dataBlock = "BezierHandle";
			Parent = "CameraPath1";
			parentModTrans = "0 0 0 -0.527415 0.546097 -0.650855 2.01924";
			parentOffset = "0 0 0";
			parentTransform = "0 0 0 -0.527415 0.546097 -0.650855 2.01924";
	};
	new Trigger(Bounds) {
		position = "-12 12 -100";
		rotation = "1 0 0 0";
		scale = "24 24 200";
		dataBlock = "InBoundsTrigger";
		polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
	};
};
//--- OBJECT WRITE END ---