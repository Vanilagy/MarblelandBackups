//--- OBJECT WRITE BEGIN ---
new SimGroup(MissionGroup) {

   new ScriptObject(MissionInfo) {
         artist = "Nockess";
         customRadarRule = "0";
         desc = "Learn how to use PowerUps to bounce higher and not at all.";
         eastereggHint = "Get there before the wall opens up... sort of.";
         game = "Gold";
         gameMode = "null";
         generalHint = "Practice your control in mid-air. Particularly for the end, see if you can avoid the striped floor with some backspin.";
         goldTime = "15000";
         hideRadar = "1";
         level = "11";
         music = "Groove Police.ogg";
         name = "MBGR 11: Rebound Opposition";
         startHelpText = "Bounce to the other side with the Super Bounce PowerUp in front of you!";
         trivia = "Always wanted a good excuse to make a tutorial level just based around these two PowerUps. Just feels wrong to include anything else.";
         type = "Beginner";
         ultimateHint = "You can make it around the striped floor down to the finish. It\'s hard, but doable.";
         ultimateTime = "8500";
   };
   new MissionArea(MissionArea) {
      area = "-360 -648 720 1296";
      flightCeiling = "300";
      flightCeilingRange = "20";
         locked = "true";
   };
   new Sky(Sky) {
      position = "336 136 0";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      cloudHeightPer[0] = "0.349971";
      cloudHeightPer[1] = "0.3";
      cloudHeightPer[2] = "0.199973";
      cloudSpeed1 = "0.0005";
      cloudSpeed2 = "0.001";
      cloudSpeed3 = "0.0003";
      visibleDistance = "500";
      useSkyTextures = "1";
      renderBottomTexture = "1";
      SkySolidColor = "0.900000 0.900000 0.900000 1.000000";
      fogDistance = "300";
      fogColor = "0.600000 0.600000 0.600000 1.000000";
      fogVolume1 = "0 0 0";
      fogVolume2 = "0 0 0";
      fogVolume3 = "0 0 0";
      materialList = "~/data/skies/sky_day.dml";
      windVelocity = "1 1 0";
      windEffectPrecipitation = "1";
      noRenderBans = "1";
      fogVolumeColor1 = "128.000000 128.000000 128.000000 -222768174765569860000000000000000000000.000000";
      fogVolumeColor2 = "128.000000 128.000000 128.000000 0.000000";
      fogVolumeColor3 = "128.000000 128.000000 128.000000 -170698929442160050000000000000000000000.000000";
         locked = "true";
   };
   new Sun() {
      direction = "0.544508 0.439467 -0.714409";
      color = "1.400000 1.200000 0.400000 1.000000";
      ambient = "0.300000 0.300000 0.400000 1.000000";
         locked = "true";
         position = "0 0 0";
         rotation = "1 0 0 0";
         scale = "1 1 1";
   };
   new InteriorInstance() {
      position = "0 0 0";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors/beginner/reloaded_reboundopposition.dif";
      showTerrainInside = "0";
   };
   new SimGroup(CheckPoints) {
   };
   new Item() {
      position = "8 10.5 -30.8";
      rotation = "0 0 1 90";
      scale = "1 1 1";
      dataBlock = "ShockAbsorberItem";
      collideable = "0";
      static = "1";
      rotate = "1";
   };
   new StaticShape(StartPoint) {
      position = "8 4 1";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "StartPad_MBG";
   };
   new StaticShape(EndPoint) {
      position = "8 14 -55";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "EndPad_MBG";
   };
   new Item() {
      position = "8 12 1.35";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "SuperBounceItem";
      collideable = "0";
      static = "1";
      rotate = "1";
   };
   new Item() {
      position = "8 52 -10.8";
      rotation = "0 0 1 90";
      scale = "1 1 1";
      dataBlock = "ShockAbsorberItem";
      collideable = "0";
      static = "1";
      rotate = "1";
   };
   new ScriptObject() {
         Time = "0";
         bonusTime = "0";
         gemCount = "0";
         pad = "1862";
         penaltyTime = "0";
         powerup = "0";
   };
   new Trigger(shockhelp2) {
      position = "2 16.25 -31";
      rotation = "1 0 0 0";
      scale = "12 8.25 6";
      dataBlock = "HelpTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
         displayonce = "0";
         persistTime = "5000";
         text = "Drop down to the finish!";
   };
   new StaticShape() {
      position = "8 14 -47";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "SignFinish";
   };
   new Item() {
      position = "8 58 -11";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "GemItemYellow";
      collideable = "0";
      static = "1";
      rotate = "1";
   };
   new Trigger(shockhelp) {
      position = "0 62 -11";
      rotation = "1 0 0 0";
      scale = "16 12 6";
      dataBlock = "HelpTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
         displayonce = "0";
         persistTime = "5000";
         text = "Turn around and use the Shock Absorber PowerUp to safely land on the floor!";
   };
   new StaticShape() {
      position = "15.75 54 -9.8";
      rotation = "0 0 1 100";
      scale = "1 1 1";
      dataBlock = "SignPlainRight";
   };
   new Trigger(Bounds) {
      position = "-15 80 -70";
      rotation = "1 0 0 0";
      scale = "50 100 90";
      dataBlock = "InBoundsTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
   };
   new StaticShape() {
      position = "0.25 54 -9.8";
      rotation = "0 0 -1 100";
      scale = "1 1 1";
      dataBlock = "SignPlainLeft";
   };
   new SimGroup(PathNodeGroup) {

      new StaticShape(CameraPath1) {
         position = "-10.967 12.8475 14.7875";
         rotation = "0.612027 -0.291632 0.735102 65.9034";
         scale = "1 1 1";
         dataBlock = "PathNode";
            nextNode = "CameraPath1";
            placed = "1";
            reverseRotation = "0";
            timeToNext = "3000";
            usePosition = "1";
            useRotation = "1";
            useScale = "0";
      };
   };
   new SimGroup(MustChange_g) {

      new Path() {

         new Marker() {
            position = "2 16.5 -19";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "0";
            msToNext = "2000";
            smoothingType = "Accelerate";
         };
         new Marker() {
            position = "2 16.5 -7";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "1";
            msToNext = "2000";
            smoothingType = "Accelerate";
         };
         new Marker() {
            position = "2 16.5 -7";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "2";
            msToNext = "2000";
            smoothingType = "Accelerate";
         };
      };
      new Trigger(MustChange) {
         position = "8 56 -8";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "TriggerGotoTarget";
         polyhedron = "-8.0000000 -6.0000000 3.0000000 0.0000000 12.0000000 0.0000000 16.0000000 0.0000000 0.0000000 0.0000000 0.0000000 -6.0000000";
            IContinueToTTime = "0";
            instant = "0";
            targetTime = "99999";
      };
      new PathedInterior(MustChange) {
         position = "0 0 0";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "PathedDefault";
         interiorResource = "marble/data/interiors/beginner/reloaded_reboundopposition.dif";
         interiorIndex = "0";
         basePosition = "0 0 0";
         baseRotation = "1 0 0 0";
         baseScale = "1 1 1";
            initialTargetPosition = "0";
      };
   };
   new SimGroup(MustChange_g) {

      new Path() {

         new Marker() {
            position = "6 12.5 -31";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "0";
            msToNext = "500";
            smoothingType = "Accelerate";
         };
         new Marker() {
            position = "10 12.5 -31";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "1";
            msToNext = "500";
            smoothingType = "Accelerate";
         };
         new Marker() {
            position = "10 12.5 -31";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "2";
            msToNext = "500";
            smoothingType = "Accelerate";
         };
      };
      new Trigger(MustChange) {
         position = "8 56 -8";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "TriggerGotoTarget";
         polyhedron = "-8.0000000 -6.0000000 3.0000000 0.0000000 12.0000000 0.0000000 16.0000000 0.0000000 0.0000000 0.0000000 0.0000000 -6.0000000";
            IContinueToTTime = "0";
            instant = "0";
            targetTime = "99999";
      };
      new PathedInterior(MustChange) {
         position = "0 0 0";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "PathedDefault";
         interiorResource = "marble/data/interiors/beginner/reloaded_reboundopposition.dif";
         interiorIndex = "1";
         basePosition = "0 0 0";
         baseRotation = "1 0 0 0";
         baseScale = "1 1 1";
            initialTargetPosition = "0";
      };
   };
   new Item() {
      position = "8 13.5 -32.18";
      rotation = "1 0 0 0";
      scale = "0.9 0.9 0.9";
      dataBlock = "EasterEgg_MBG";
      collideable = "0";
      static = "1";
      rotate = "1";
         noRespawn = "0";
   };
};
//--- OBJECT WRITE END ---
