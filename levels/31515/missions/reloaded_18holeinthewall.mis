//--- OBJECT WRITE BEGIN ---
new SimGroup(MissionGroup) {

   new ScriptObject(MissionInfo) {
         artist = "Nockess";
         customRadarRule = "0";
         desc = "Ride the moving platforms and aim for the gaps in the walls.";
         eastereggHint = "Find a way to stay on the second platform to the end of its path, or at least be there when it\'s stopped.";
         game = "Gold";
         gameMode = "null";
         generalHint = "A very common level style where the best strategy is to simply look forward all the time. Be quick at the end!";
         goldTime = "24000";
         hideRadar = "1";
         level = "18";
         music = "Beach Party.ogg";
         name = "MBGR 18: Hole in the Wall";
         startHelpText = "You can call back the moving platforms, but that loses you a lot of time.";
         trivia = "So the game show has the walls moving instead of the platform, oh well. It\'s almost an impossible task to come up with an interesting name for a level that\'s just a pretty generic moving platform challenge.";
         type = "Beginner";
         ultimateHint = "The traplaunch is necessary, but you can either bounce all the way to the finish or get creative with the last wall and the Super Jump.";
         ultimateTime = "19500";
   };
   new MissionArea(MissionArea) {
      area = "-360 -648 720 1296";
      flightCeiling = "300";
      flightCeilingRange = "20";
         locked = "true";
   };
   new Sky(Sky) {
      position = "336 136 0";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      cloudHeightPer[0] = "0.349971";
      cloudHeightPer[1] = "0.3";
      cloudHeightPer[2] = "0.199973";
      cloudSpeed1 = "0.0005";
      cloudSpeed2 = "0.001";
      cloudSpeed3 = "0.0003";
      visibleDistance = "500";
      useSkyTextures = "1";
      renderBottomTexture = "1";
      SkySolidColor = "0.900000 0.900000 0.900000 1.000000";
      fogDistance = "300";
      fogColor = "0.600000 0.600000 0.600000 1.000000";
      fogVolume1 = "0 0 0";
      fogVolume2 = "0 0 0";
      fogVolume3 = "0 0 0";
      materialList = "~/data/skies/sky_day.dml";
      windVelocity = "1 1 0";
      windEffectPrecipitation = "1";
      noRenderBans = "1";
      fogVolumeColor1 = "128.000000 128.000000 128.000000 -222768174765569860000000000000000000000.000000";
      fogVolumeColor2 = "128.000000 128.000000 128.000000 0.000000";
      fogVolumeColor3 = "128.000000 128.000000 128.000000 -170698929442160050000000000000000000000.000000";
         locked = "true";
   };
   new Sun() {
      direction = "0.544508 0.439467 -0.714409";
      color = "1.400000 1.200000 0.400000 1.000000";
      ambient = "0.300000 0.300000 0.400000 1.000000";
         locked = "true";
         position = "0 0 0";
         rotation = "1 0 0 0";
         scale = "1 1 1";
   };
   new SimGroup(CheckPoints) {

      new StaticShape(StartPoint) {
         position = "4 4 0.5";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "StartPad_MBG";
      };
   };
   new StaticShape() {
      position = "4 4 23";
      rotation = "0 0 1 60";
      scale = "1 1 1";
      dataBlock = "SignFinish";
   };
   new InteriorInstance() {
      position = "0 0 0";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors/beginner/reloaded_holeinthewall.dif";
      showTerrainInside = "0";
   };
   new StaticShape(EndPoint) {
      position = "4 4 15.5";
      rotation = "0 0 -1 90";
      scale = "1 1 1";
      dataBlock = "EndPad_MBG";
   };
   new SimGroup(MustChange_g) {

      new Path() {

         new Marker() {
            position = "43 10.5 8.5";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "0";
            msToNext = "8000";
            smoothingType = "Accelerate";
         };
         new Marker() {
            position = "6 10.5 8.5";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "1";
            msToNext = "8000";
            smoothingType = "Accelerate";
         };
         new Marker() {
            position = "6 10.5 8.5";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "2";
            msToNext = "8000";
            smoothingType = "Accelerate";
         };
      };
      new Trigger(MustChange) {
         position = "36.5 4 9.5";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "TriggerGotoTarget";
         polyhedron = "-6.0000000 -6.0000000 1.0000000 0.0000000 12.0000000 0.0000000 12.0000000 0.0000000 0.0000000 0.0000000 0.0000000 -2.0000000";
            IContinueToTTime = "0";
            instant = "0";
            targetTime = "8000";
      };
      new Trigger(MustChange) {
         position = "49.5 4 9.5";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "TriggerGotoTarget";
         polyhedron = "-6.0000000 -4.0000000 1.0000000 0.0000000 8.0000000 0.0000000 12.0000000 0.0000000 0.0000000 0.0000000 0.0000000 -2.0000000";
            IContinueToTTime = "0";
            instant = "0";
            targetTime = "2";
      };
      new PathedInterior(MustChange) {
         position = "0 0 0";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "PathedDefault";
         interiorResource = "marble/data/interiors/beginner/reloaded_holeinthewall.dif";
         interiorIndex = "1";
         basePosition = "0 0 0";
         baseRotation = "1 0 0 0";
         baseScale = "1 1 1";
            initialTargetPosition = "0";
      };
   };
   new SimGroup(MustChange_g) {

      new Path() {

         new Marker() {
            position = "10.5 21.5 0";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "0";
            msToNext = "7000";
            smoothingType = "Accelerate";
         };
         new Marker() {
            position = "10.5 51.5 0";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "1";
            msToNext = "500";
            smoothingType = "Accelerate";
         };
         new Marker() {
            position = "10.5 51.5 0";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "2";
            msToNext = "9000";
            smoothingType = "Accelerate";
         };
         new Marker() {
            position = "56 51.5 0";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "3";
            msToNext = "9000";
            smoothingType = "Accelerate";
         };
         new Marker() {
            position = "56 51.5 0";
            rotation = "1 0 0 0";
            scale = "1 1 1";
            seqNum = "4";
            msToNext = "9000";
            smoothingType = "Accelerate";
         };
      };
      new Trigger(MustChange) {
         position = "4 15 1.5";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "TriggerGotoTarget";
         polyhedron = "-6.0000000 -6.0000000 1.0000000 0.0000000 12.0000000 0.0000000 12.0000000 0.0000000 0.0000000 0.0000000 0.0000000 -2.0000000";
            IContinueToTTime = "0";
            instant = "0";
            targetTime = "16500";
      };
      new Trigger(MustChange) {
         position = "4 4 0.6875";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "TriggerGotoTarget";
         polyhedron = "-4.0000000 -4.0000000 0.1875000 0.0000000 8.0000000 0.0000000 8.0000000 0.0000000 0.0000000 0.0000000 0.0000000 -0.3750000";
            IContinueToTTime = "0";
            instant = "0";
            targetTime = "0";
      };
      new PathedInterior(MustChange) {
         position = "0 0 0";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         dataBlock = "PathedDefault";
         interiorResource = "marble/data/interiors/beginner/reloaded_holeinthewall.dif";
         interiorIndex = "0";
         basePosition = "0 0 0";
         baseRotation = "1 0 0 0";
         baseScale = "1 1 1";
            initialTargetPosition = "0";
      };
   };
   new ScriptObject() {
         Time = "0";
         bonusTime = "0";
         gemCount = "0";
         pad = "1712";
         penaltyTime = "0";
         powerup = "0";
   };
   new Item() {
      position = "15 4 9";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "SuperJumpItem";
      collideable = "0";
      static = "1";
      rotate = "1";
   };
   new ScriptObject() {
         Time = "0";
         bonusTime = "0";
         gemCount = "0";
         pad = "2528";
         penaltyTime = "0";
         powerup = "0";
   };
   new Item() {
      position = "51.5 34 0.5";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "GemItemBlue";
      collideable = "0";
      static = "1";
      rotate = "1";
   };
   new Trigger(Bounds) {
      position = "-15 60 -5";
      rotation = "1 0 0 0";
      scale = "80 80 200";
      dataBlock = "InBoundsTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
   };
   new SimGroup(PathNodeGroup) {

      new StaticShape(CameraPath1) {
         position = "-9.81268 11.9742 17.9046";
         rotation = "0.359214 -0.213227 0.90857 66.3153";
         scale = "1 1 1";
         dataBlock = "PathNode";
            nextNode = "CameraPath1";
            placed = "1";
            reverseRotation = "0";
            timeToNext = "3000";
            usePosition = "1";
            useRotation = "1";
            useScale = "0";
      };
   };
   new Item() {
      position = "4 4 14.5";
      rotation = "1 0 0 180";
      scale = "1 1 1";
      dataBlock = "EasterEgg_MBG";
      collideable = "0";
      static = "1";
      rotate = "1";
         noRespawn = "0";
   };
};
//--- OBJECT WRITE END ---
