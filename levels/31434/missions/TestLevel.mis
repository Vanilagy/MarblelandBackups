// PARTICLES

// (to be added)

// POWERUPS

datablock AudioProfile(GetMirrorSfx) {
	filename    = "~/data/sound/ap_mbu/easterfound.wav";
	description = AudioDefault3d;
	preload = true;
};

datablock AudioProfile(UseMirrorSfx) {
	filename    = "~/data/sound/lb_nudge.wav";
	description = AudioDefault3d;
	preload = true;
};

datablock ItemData(MagicMirrorItem) {
	// Mission editor category
	superCategory = "SummerArmy";
	category = "PowerUps";
	className = "PowerUp";
	powerUpId = 2832;

	activeAudio = UseMirrorSfx;
	pickupAudio = GetMirrorSfx;

	// Basic Item properties
	shapeFile = "~/data/shapes_summerarmy/Gameplay/Powerups/Mirror.dts";
	mass = 1;
	friction = 1;
	elasticity = 0.3;
	emap = false;

	// Dynamic properties defined by the scripts
	pickupName = "a Magic Mirror PowerUp!";
	useName= "Magic Mirror PowerUp!";
	maxInventory = 1;
	coopClient = 1;

	customField[0, "field"  ] = "showHelpOnPickup";
	customField[0, "type"   ] = "boolean";
	customField[0, "name"   ] = "Show Help Message";
	customField[0, "desc"   ] = "If the player should see a help message for how to use the PowerUp when they collect it.";
	customField[0, "default"] = "0";
};

// HAZARDS

// Cannonball
datablock StaticShapeData(CannonBall : LandMine) {
	superCategory = "SummerArmy";
	category = "Hazards";
	shapeFile = "~/data/shapes_summerarmy/Gameplay/Hazards/Cannonball.dts";
};

// Heaven Fade Platform
datablock StaticShapeData(FadePlatformSky : FadePlatform) {
	shapeFile = "~/data/shapes_summerarmy/Gameplay/Hazards/FadePlatform/SkyFadePlat.dts";
	skin[0] = ""; //Don't allow skinning
};

// Metal Door
datablock AudioProfile(MetalDoorOpenSfx) {
	filename    = "~/data/sound/SummerArmy/metaldooropen.wav";
	description = AudioDefault3d;
	preload = true;
};

datablock AudioProfile(MetalDoorCloseSfx) {
	filename    = "~/data/sound/SummerArmy/metaldoorclose.wav";
	description = AudioDefault3d;
	preload = true;
};

datablock StaticShapeData(MetalDoor) {
	superCategory = "SummerArmy";
	category = "Doors";
	shapeFile = "~/data/shapes_summerarmy/Gameplay/Door/MetalDoor.dts";

	customField[0, "field"  ] = "resetTime";
	customField[0, "type"   ] = "time";
	customField[0, "name"   ] = "Reset Time";
	customField[0, "desc"   ] = "How long it takes the door to reclose.";
	customField[0, "default"] = "5000";
};

function MetalDoor::onAdd(%this, %obj) {
	%obj._open = false;
	%obj._timeout = 1;
	// Default variables
	if (%obj.resetTime $= "0" || %obj.resetTime $= "")
		%obj.resetTime = "5000";
}

function MetalDoor::onCollision(%this,%obj,%col) {
	if (!Parent::onCollision(%this,%obj,%col)) return;
	if (!%obj._open) {
		// pause before opening - give marble a chance to get off
		%this.schedule(%obj._timeout,"open",%obj);
		%obj._open = true;

		// Schedule the button reset
		%resetTime = (%obj.resetTime $= "Default")? %this.resetTime: %obj.resetTime;
		if (%resetTime)
			%this.schedule(%resetTime,close,%obj);
	}
}

function MetalDoor::open(%this, %obj) {
	%obj.playAudio(0,MetalDoorOpenSfx);
	%obj.playThread(0,"open");
	%obj._open = true;
}

function MetalDoor::close(%this, %obj) {
	%obj.playAudio(0,MetalDoorCloseSfx);
	%obj.playThread(0,"close");
	%obj._open = false;
}

// DECORS

// (to be added)

//--- OBJECT WRITE BEGIN ---
new SimGroup(MissionGroup) {

   new ScriptObject(MissionInfo) {
         Time = "1342222";
         alarmStartTime = "22";
         artist = "SummerArmy";
         awesomeHint = "Hint 3";
         awesomeTime = "555";
         customRadarRule = "47";
         desc = "Just for testing.";
         eggHint = "Hint 4";
         game = "PlatinumQuest";
         gameMode = "null";
         generalHint = "Hint 1";
         level = "1000";
         music = "Tranquility.ogg";
         name = "Test Level!";
         platinumTime = "71111";
         radar = "1";
         startHelpText = "Well...";
         trivia = "¡ Inverted Exclamation\n¢ Cent Sign\n£ Pound Sign\n¤ Currency Sign\n¥ Yen Sign\n¦ Broken Bar\n§ Section Sign\n¨ Umlaut\n© Copyright Sign\nª Superscript A\n« Mini Double Less-Than\n¬ Not Sign\n® Registered Trademark\n¯ Macron\n° Degrees\n± Plus/Minus\n² Superscript Two\n³ Superscript Three\n´ Acute\nµ Micro\n¶ Pilcrow\n· Middle-Dot\n¸ Cedella\n¿ Inverted Question";
         type = "Custom";
         ultimateHint = "Hint 2";
         ultimateTime = "33333";
   };
   new MissionArea(MissionArea) {
      area = "-360 -648 720 1296";
      flightCeiling = "300";
      flightCeilingRange = "20";
         locked = "true";
   };
   new Sky(Sky) {
      position = "0 0 0";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      cloudHeightPer[0] = "0";
      cloudHeightPer[1] = "0";
      cloudHeightPer[2] = "0";
      cloudSpeed1 = "0.0001";
      cloudSpeed2 = "0.0002";
      cloudSpeed3 = "0.0003";
      visibleDistance = "500";
      useSkyTextures = "1";
      renderBottomTexture = "1";
      SkySolidColor = "0.600000 0.600000 0.600000 1.000000";
      fogDistance = "300";
      fogColor = "0.600000 0.600000 0.600000 1.000000";
      fogVolume1 = "-1 7.45949e-031 1.3684e-038";
      fogVolume2 = "-1 1.07208e-014 8.756e-014";
      fogVolume3 = "-1 5.1012e-010 2.05098e-008";
      materialList = "~/data/skies_pq/Blender3/blender3.dml";
      windVelocity = "1 0 0";
      windEffectPrecipitation = "0";
      noRenderBans = "1";
      fogVolumeColor1 = "128.000000 128.000000 128.000000 0.000000";
      fogVolumeColor2 = "128.000000 128.000000 128.000000 0.000004";
      fogVolumeColor3 = "128.000000 128.000000 128.000000 14435505.000000";
   };
   new Sun() {
      direction = "0.638261 0.459006 -0.61801";
      color = "1.400000 1.200000 0.400000 1.000000";
      ambient = "0.300000 0.300000 0.400000 1.000000";
   };
   new InteriorInstance() {
      position = "0 0 0";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/lbinteriors_pq/unused/flatgrass.dif";
      showTerrainInside = "0";
         locked = "true";
   };
   new Trigger(Bounds) {
      position = "-73.25 80 -12.5625";
      rotation = "1 0 0 0";
      scale = "145 154.5 63.784";
      dataBlock = "InBoundsTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
         locked = "true";
   };
   new SimGroup(PathNodeGroup) {

      new StaticShape(CameraPath1) {
         position = "80 2.625 95.2354";
         rotation = "0.180554 0.180555 -0.966851 91.9313";
         scale = "1 1 1";
         dataBlock = "PathNode";
            FinalRotOffset = "0 0 0";
            RotationMultiplier = "1";
            Smooth = "0";
            SmoothEnd = "0";
            SmoothStart = "0";
            Spline = "0";
            bezier = "0";
            branchNodes = " ";
            delay = "0";
            nextNode = "CameraPath2";
            placed = "1";
            reverseRotation = "0";
            speed = "0";
            timeToNext = "4000";
            usePosition = "1";
            useRotation = "1";
            useScale = "1";
      };
      new StaticShape(CameraPath2) {
         position = "73.9104 35.0574 95.2354";
         rotation = "0.121746 0.182206 -0.975694 113.796";
         scale = "1 1 1";
         dataBlock = "PathNode";
            FinalRotOffset = "0 0 0";
            RotationMultiplier = "1";
            Smooth = "0";
            SmoothEnd = "0";
            SmoothStart = "0";
            Spline = "0";
            bezier = "0";
            branchNodes = " ";
            delay = "0";
            nextNode = "CameraPath0";
            placed = "1";
            reverseRotation = "0";
            speed = "0";
            timeToNext = "4000";
            usePosition = "1";
            useRotation = "1";
            useScale = "1";
      };
   };
   new Trigger() {
      position = "-1.25 3.25 0.25";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "SpawnTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
         gravity = "0";
   };
   new StaticShape() {
      position = "0 12 2.25";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "MetalDoor";
         resetTime = "5000";
   };
   new InteriorInstance() {
      position = "5 24 0.25";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_pq/advanced/wavesMPArea1.dif";
      showTerrainInside = "0";
   };
   new InteriorInstance() {
      position = "5 24 2.25";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_pq/advanced/wavesMPArea1.dif";
      showTerrainInside = "0";
   };
   new InteriorInstance() {
      position = "5 24 4.25";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_pq/advanced/wavesMPArea1.dif";
      showTerrainInside = "0";
   };
   new InteriorInstance() {
      position = "5 26 4.25";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_pq/advanced/wavesMPArea1.dif";
      showTerrainInside = "0";
   };
   new InteriorInstance() {
      position = "5 28 4.25";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_pq/advanced/wavesMPArea1.dif";
      showTerrainInside = "0";
   };
   new InteriorInstance() {
      position = "5 30 4.25";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_pq/advanced/wavesMPArea1.dif";
      showTerrainInside = "0";
   };
   new InteriorInstance() {
      position = "5 30 2.25";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_pq/advanced/wavesMPArea1.dif";
      showTerrainInside = "0";
   };
   new InteriorInstance() {
      position = "5 30 0.25";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_pq/advanced/wavesMPArea1.dif";
      showTerrainInside = "0";
   };
   new Item() {
      position = "-1.75 9 0.25";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "SuperJumpItem_PQ";
      collideable = "0";
      static = "1";
      rotate = "1";
   };
   new StaticShape() {
      position = "-4.25 -3.75 0.5";
      rotation = "0 -1 0 90.0002";
      scale = "1 1 1";
      dataBlock = "MetalDoor";
         resetTime = "5000";
   };
   new Item() {
      position = "1.56051 15.0198 0.87331";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "MagicMirrorItem";
      collideable = "0";
      static = "1";
      rotate = "1";
   };
   new TSStatic() {
      position = "2.6328 1.21834 2.59027";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      shapeName = "~/data/shapes_summerarmy/Gameplay/Door/MetalDoor.dts";
   };
   new TSStatic() {
      position = "2.78428 -3.14006 1.99106";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      shapeName = "~/data/shapes_summerarmy/Gameplay/Powerups/Mirror.dts";
   };
};
//--- OBJECT WRITE END ---
