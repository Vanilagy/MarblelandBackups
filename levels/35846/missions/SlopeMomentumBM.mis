// NORMAL AND SPEC MAPS

// @include "~/data/interiors_bm/shaders_bm/bm_beam.normal.png"
// @include "~/data/interiors_bm/shaders_bm/bm_beam.spec.png"

// @include "~/data/interiors_bm/shaders_bm/bm_edge_white.normal.png"
// @include "~/data/interiors_bm/shaders_bm/bm_edge_white.spec.png"

// @include "~/data/interiors_bm/shaders_bm/bm_friction_grass.normal.png"
// @include "~/data/interiors_bm/shaders_bm/bm_friction_grass.spec.png"

// @include "~/data/interiors_bm/shaders_bm/bm_grid_blank4.normal.png"
// @include "~/data/interiors_bm/shaders_bm/bm_grid_blank4.spec.png"

// @include "~/data/interiors_bm/shaders_bm/bm_stripe_caution2.spec.png"

// @include "~/data/interiors_bm/shaders_bm/bm_tile06_C.normal.png"
// @include "~/data/interiors_bm/shaders_bm/bm_tile06_C.spec.png"

// CUSTOM SKINS FOR SHAPES

// @include "~/data/shapes_bm/LumiCube/solid_bm_blue.png"
// @include "~/data/shapes_bm/LumiCube/metal_bm.png"

// @include "~/data/shapes_bm/pads/endpad_bm_edge.png"
// @include "~/data/shapes_bm/pads/exit.png"
// @include "~/data/shapes_bm/pads/metal_bm.png"
// @include "~/data/shapes_bm/pads/sigiloff.png"
// @include "~/data/shapes_bm/pads/sigilon.png"
// @include "~/data/shapes_bm/pads/spawn.png"
// @include "~/data/shapes_bm/pads/blue.jpg"
// @include "~/data/shapes_bm/pads/green.jpg"
// @include "~/data/shapes_bm/pads/red.jpg"
// @include "~/data/shapes_bm/pads/white.jpg"
// @include "~/data/shapes_bm/pads/button_bm.png"
// @include "~/data/shapes_bm/pads/endgate_bm.png"
// @include "~/data/shapes_bm/pads/endpad_bm_base.png"

// @include "~/data/shapes_bm/powerups/bm_powerup_shock.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_speed.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_white.png"
// @include "~/data/shapes_bm/powerups/metal_bm.png"
// @include "~/data/shapes_bm/powerups/1.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/2.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/3.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/4.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/5.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/6.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/7.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/8.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/9.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/10.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/base.bm_powerup_time.png"
// @include "~/data/shapes_bm/powerups/bm_gate_anvil.png"
// @include "~/data/shapes_bm/powerups/bm_gate_bounce.png"
// @include "~/data/shapes_bm/powerups/bm_gate_gravity.png"
// @include "~/data/shapes_bm/powerups/bm_gate_gyro.png"
// @include "~/data/shapes_bm/powerups/bm_gate_jump.png"
// @include "~/data/shapes_bm/powerups/bm_gate_shock.png"
// @include "~/data/shapes_bm/powerups/bm_gate_speed.png"
// @include "~/data/shapes_bm/powerups/bm_gate_time.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_anvil.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_black.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_bounce.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_gray.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_gyro.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_jump.png"
// @include "~/data/shapes_bm/powerups/bm_powerup_mega.png"

// @include "~/data/shapes_bm/scenery/metal_bm.png"
// @include "~/data/shapes_bm/scenery/solid_bm.png"
// @include "~/data/shapes_bm/scenery/base.glass.png"
// @include "~/data/shapes_bm/scenery/bm_lamp.png"
// @include "~/data/shapes_bm/scenery/bm_lineglow_auto.png"
// @include "~/data/shapes_bm/scenery/bm_lineglow_manual.png"
// @include "~/data/shapes_bm/scenery/bm_marker_light_auto.png"
// @include "~/data/shapes_bm/scenery/bm_marker_light_manual.png"
// @include "~/data/shapes_bm/scenery/bm_scenery_black.png"
// @include "~/data/shapes_bm/scenery/button_bm.png"

// @include "~/data/shapes_bm/signs/solid_bm.png"
// @include "~/data/shapes_bm/signs/checkpoint_bm.png"
// @include "~/data/shapes_bm/signs/finish_bm.png"
// @include "~/data/shapes_bm/signs/hazard_bm.png"
// @include "~/data/shapes_bm/signs/metal_bm.png"

// CHECKPOINT

datablock StaticShapeData(Checkpoint_BM : checkPoint) {
	shapeFile = "~/data/shapes_bm/pads/checkpad.dts";
};

function Checkpoint_BM::onMissionReset(%this, %obj) {
	if (!$Game::Menu) {
		%obj.setThreadDir(0,false);
	}
}

function Checkpoint_BM::onActivateCheckpoint(%this, %obj) {
	if (!$Game::Menu) {
		%obj.setThreadDir(0,false);
	}
}

// HELP BUBBLE

datablock StaticShapeData(HelpBubble_BM : HelpBubble) {
	className = "LevelParts";
	category = "Help";
	shapeFile = "platinum/data/shapes_bm/signs/bm_hintscreen.dts";

	customField[0, "field"  ] = "text";
	customField[0, "type"   ] = "string";
	customField[0, "name"   ] = "Help Text";
	customField[0, "desc"   ] = "Text that is shown to the player when they enter the trigger.";
	customField[0, "default"] = "Help Text";
	customField[1, "field"  ] = "displayonce";
	customField[1, "type"   ] = "boolean";
	customField[1, "name"   ] = "Only Display Once";
	customField[1, "desc"   ] = "If the trigger should only show once (resets on restart).";
	customField[1, "default"] = "0";
	customField[2, "field"  ] = "persistTime";
	customField[2, "type"   ] = "time";
	customField[2, "name"   ] = "Persist Time";
	customField[2, "desc"   ] = "For how long the help message will be visible after entering the trigger.";
	customField[2, "default"] = "5000";
	customField[3, "field"  ] = "extended";
	customField[3, "type"   ] = "boolean";
	customField[3, "name"   ] = "Use Extended Help";
	customField[3, "desc"   ] = "If the extended help dialog should be used instead.";
	customField[3, "default"] = "0";
	customField[4, "field"  ] = "disable";
	customField[4, "type"   ] = "boolean";
	customField[4, "name"   ] = "Disabled";
	customField[4, "desc"   ] = "If the help bubble is disabled (for use with a trigger).";
	customField[4, "default"] = "0";
	customField[5, "field"  ] = "triggerRadius";
	customField[5, "type"   ] = "float";
	customField[5, "name"   ] = "Active Radius";
	customField[5, "desc"   ] = "Will only show when marble is within this distance.";
	customField[5, "default"] = "3";
};

// END PAD

datablock StaticShapeData(EndPad_BM : EndPad) {
	shapeFile = "~/data/shapes_bm/pads/endpadcore_bm.dts";
	
	skinCount = 0;
};

datablock StaticShapeData(EndPad_BMGate : EndPad) {
	shapeFile = "~/data/shapes_bm/pads/endgate_bm.dts";
	
	skinCount = 0;
};

// POWERUPS

datablock ItemData(SuperSpeedItem_BM : SuperSpeedItem) {
	superCategory = "PowerUps";
	category = "Blasted";
	
	shapeFile = "~/data/shapes_bm/Powerups/SuperSpeed_bm.dts";
};

datablock ItemData(SuperSpeedItem_BMGate : SuperSpeedItem) {
	superCategory = "PowerUps";
	category = "Blasted";
	
	shapeFile = "~/data/shapes_bm/Powerups/SuperSpeedGate_bm.dts";
};

//-----------------------------------------------------------------------------

datablock ItemData(TimeTravelItem5Sec_BM : TimeTravelItem) {
	superCategory = "PowerUps";
	category = "Blasted";
	
	shapeFile = "~/data/shapes_bm/Powerups/TimeTravel5Sec_bm.dts";
};

datablock ItemData(TimeTravelItem10Sec_BM : TimeTravelItem) {
	superCategory = "PowerUps";
	category = "Blasted";
	
	shapeFile = "~/data/shapes_bm/Powerups/TimeTravel10Sec_bm.dts";
};

function TimeTravelItem::onPickup(%this,%obj,%user,%amount) {
    %ret = $LB::LoggedIn || $Server::Dedicated;
    if (%ret && $platform $= "windows") {
        anticheatDetect(); // This shit aint exist on mac lmaoo
    }
    if (!Parent::onPickup(%this, %obj, %user, %amount)) {
        return false;
    }

    if (!Mode::callback("shouldAllowTTs", true)) {
        return false;
    }
  
  %bonus = (%obj.timeBonus $= "" ? $Game::TimeTravelBonus : %obj.timeBonus);
  %color = (%bonus == 0 ? %this.grayMessageColor : %this.messageColor);
  %sign = (Mode::callback("timeMultiplier", 1) > 0 ? "-" : "+");
  
  if(%obj.instant) {
    %newTime = $Time::CurrentTime - %bonus;
    if(%newTime < 0) {
      %bonus = $Time::CurrentTime;
      $Time::TotalBonus += %bonus;
      $Time::CurrentTime = 0;
    }
    else {
      $Time::CurrentTime = %newTime;
      $Time::TotalBonus += %bonus;
    }
    PlayGui.adjustTimer(-%bonus);
  }
  else {
    if (%bonus > 0)
      %user.client.incBonusTime(%bonus);
    
    commandToAll('UpdateTimeTravelCountdown'); // main_gi v4.2.3
  }

    //Show a message
    %user.client.displayGemMessage(%sign @(%bonus / 1000) @ "s", %color);
    
    return true;
}

function TimeTravelItem5Sec_BM::onAdd(%this, %obj) 
{	
	%obj.playThread(0, "minute");
	%obj.playThread(1, "hour");

	return TimeTravelItem::onAdd(%this, %obj);
}
function TimeTravelItem5Sec_BM::onPickup(%this,%obj,%user,%amount) {
	return TimeTravelItem::onPickup(%this, %obj, %user, %amount);
}
function TimeTravelItem10Sec_BM::onAdd(%this, %obj) 
{	
	%obj.playThread(0, "minute");
	%obj.playThread(1, "hour");

	return TimeTravelItem::onAdd(%this, %obj);
}
function TimeTravelItem10Sec_BM::onPickup(%this,%obj,%user,%amount) {
	return TimeTravelItem::onPickup(%this, %obj, %user, %amount);
}

//-----------------------------------------------------------------------------

datablock ItemData(LumiCube : EasterEgg) {
	superCategory = "PowerUps";
	category = "Blasted";	// This should be put in a new category
	className = "PowerUp";	// Ditto

	// Basic Item properties
	shapeFile = "~/data/shapes_bm/LumiCube/LumiCube.dts";
	mass = 1;
	friction = 1;
	elasticity = 0.3;
	emap = false;

	displayName = "LumiCube";

	// Dynamic properties defined by the scripts
	noRespawn = true;
	maxInventory = 1;
	noPickupMessage = true;
};

function LumiCube::onPickup(%this,%obj,%user,%amount) {
	return EasterEgg::onPickup(%this, %obj, %user, %amount);
}

// SCENERY

datablock StaticShapeData(EndPadEdge_BM) {
	className = "EndPadEdge";
	superCategory = "Pads";
	category = "Blasted";
	shapeFile = "~/data/shapes_bm/pads/endpadedge_bm.dts";
};

datablock StaticShapeData(EndGatePole_BM) {
	className = "EndGatePole";
	superCategory = "Pads";
	category = "Blasted";
	shapeFile = "~/data/shapes_bm/pads/endgatepole_bm.dts";
};

//SIGNS

// FRICTION PROPERTIES
new MaterialProperty(BMGrassMaterial) {
	friction = 1.5;
	restitution = 0.5;
};

addMaterialMapping("bm_friction_grass" , BMGrassMaterial);

//--- OBJECT WRITE BEGIN ---
new SimGroup(MissionGroup) {

   new ScriptObject(MissionInfo) {
         CustomRadarRule = "4";
         artist = "James C.";
         awesomeTime = "20000";
         desc = "Gain some momentum to roll up certain slopes in this level.";
         game = "Blasted";
         gameMode = "null";
         goldTime = "35000";
         level = "4";
         name = "1-4: Slope Momentum";
         platinumTime = "30000";
         type = "Custom";
         ultimateTime = "25000";
   };
   new SimGroup(HelpBubbleGroup) {

      new StaticShape(grass) {
         position = "52 30 11.5";
         rotation = "0 0 1 90.0002";
         scale = "1 1 1";
         dataBlock = "HelpBubble_BM";
            disable = "0";
            displayonce = "0";
            extended = "1";
            persistTime = "1000";
            text = "Grass can give you more traction. You can roll up slopes of grass more easily than normal slopes.";
            triggerRadius = "3";
      };
   };
   new Item() {
      position = "89.25 -12.75 27.125";
      rotation = "1 0 0 0";
      scale = "0.6 0.6 0.6";
      dataBlock = "TimeTravelItem_BM";
      collideable = "0";
      static = "1";
      rotate = "1";
         noRespawn = "0";
         skin = "3";
         timeBonus = "3000";
   };
   new SimGroup(MissionData) {

      new MissionArea(MissionArea) {
         area = "-360 -648 720 1296";
         flightCeiling = "300";
         flightCeilingRange = "20";
            locked = "true";
      };
      new Sky(Sky) {
         position = "0 0 0";
         rotation = "1 0 0 0";
         scale = "1 1 1";
         cloudHeightPer[0] = "0";
         cloudHeightPer[1] = "0";
         cloudHeightPer[2] = "0";
         cloudSpeed1 = "0.0001";
         cloudSpeed2 = "0.0002";
         cloudSpeed3 = "0.0003";
         visibleDistance = "500";
         useSkyTextures = "1";
         renderBottomTexture = "1";
         SkySolidColor = "0.600000 0.600000 0.600000 1.000000";
         fogDistance = "300";
         fogColor = "0.600000 0.600000 0.600000 1.000000";
         fogVolume1 = "-1 7.45949e-031 1.3684e-038";
         fogVolume2 = "-1 1.07208e-014 8.756e-014";
         fogVolume3 = "-1 5.1012e-010 2.05098e-008";
         materialList = "~/data/skies_bm/Day/sky_day.dml";
         windVelocity = "1 0 0";
         windEffectPrecipitation = "0";
         noRenderBans = "1";
         fogVolumeColor1 = "128.000000 128.000000 128.000000 0.000000";
         fogVolumeColor2 = "128.000000 128.000000 128.000000 0.000004";
         fogVolumeColor3 = "128.000000 128.000000 128.000000 14435505.000000";
      };
   };
   new Item() {
      position = "68 22 32.25";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "LumiCube";
      collideable = "0";
      static = "1";
      rotate = "1";
         noRespawn = "0";
   };
   new Sun() {
      direction = "-0.48795 0 -0.872872";
      color = "1.000000 1.000000 1.000000 1.000000";
      ambient = "0.500000 0.500000 0.600000 1.000000";
   };
   new SimGroup(PathNodeGroup) {

      new StaticShape(CameraPath1) {
         position = "-31.6303 55.1125 10.1454";
         rotation = "0.0639849 -0.176343 0.982247 140.768";
         scale = "1 1 1";
         dataBlock = "PathNode";
            FinalRotOffset = "1 0 0 0";
            RotationMultiplier = "1";
            Smooth = "0";
            SmoothEnd = "0";
            SmoothStart = "0";
            Spline = "0";
            bezier = "0";
            branchNodes = " ";
            delay = "0";
            nextNode = "CameraPath1";
            placed = "1";
            reverseRotation = "0";
            speed = "0";
            timeToNext = "3000";
            usePosition = "1";
            useRotation = "1";
            useScale = "0";
      };
   };
   new InteriorInstance() {
      position = "0 0 0";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_bm/chapter1/SlopeMomentum_BM.dif";
      showTerrainInside = "0";
   };
   new Trigger() {
      position = "-0.5 0.5 0.375";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "SpawnTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
         center = "1";
         gravity = "0";
   };
   new InteriorInstance() {
      position = "0 0 0";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_bm/chapter1/SlopeMomentum_BMCurve1.dif";
      showTerrainInside = "0";
   };
   new InteriorInstance() {
      position = "0 0 0";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_bm/chapter1/SlopeMomentum_BMCurve2.dif";
      showTerrainInside = "0";
   };
   new InteriorInstance() {
      position = "0 0 0";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_bm/chapter1/SlopeMomentum_BMCurve3.dif";
      showTerrainInside = "0";
   };
   new Trigger(Bounds) {
      position = "-50.7678 -52.2678 -5.125";
      rotation = "1 0 0 0";
      scale = "157.518 146.036 93.625";
      dataBlock = "InBoundsTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
   };
   new InteriorInstance() {
      position = "0 53.25 1.5";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_bm/parts/bm_chevron_left1.dif";
      showTerrainInside = "0";
   };
   new InteriorInstance() {
      position = "-34 47.5 5.75";
      rotation = "0 0 -1 45.0001";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_bm/parts/bm_chevron_left1.dif";
      showTerrainInside = "0";
   };
   new InteriorInstance() {
      position = "-31 28 7.25";
      rotation = "0 0 1 225";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_bm/parts/bm_chevron_left1.dif";
      showTerrainInside = "0";
   };
   new InteriorInstance() {
      position = "91.25 30 14.5";
      rotation = "0 0 1 90.0002";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_bm/parts/bm_chevron_right1.dif";
      showTerrainInside = "0";
   };
   new InteriorInstance() {
      position = "86 -35 27";
      rotation = "0 0 1 135";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_bm/parts/bm_chevron_right1.dif";
      showTerrainInside = "0";
   };
   new InteriorInstance() {
      position = "67.5 -35.5 29.5";
      rotation = "0 0 1 225.001";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_bm/parts/bm_chevron_right1.dif";
      showTerrainInside = "0";
   };
   new InteriorInstance() {
      position = "71 77 34.25";
      rotation = "0 0 1 45.0001";
      scale = "1 1 1";
      interiorFile = "~/data/interiors_bm/parts/bm_chevron_left1.dif";
      showTerrainInside = "0";
   };
   new StaticShape(check1) {
      position = "86 5 22.01";
      rotation = "0 0 1 180";
      scale = "1 1 1";
      dataBlock = "Checkpoint_BM";
         chkcollide = "1";
         disableOOB = "0";
         gravity = "0";
   };
   new Trigger(CheckP1) {
      position = "83 15 15.5";
      rotation = "1 0 0 0";
      scale = "6 12 12";
      dataBlock = "CheckpointTrigger";
      polyhedron = "0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 -1.0000000 0.0000000 0.0000000 0.0000000 1.0000000";
         gravity = "0";
         respawnPoint = "Check1";
   };
   new StaticShape() {
      position = "40 74 34.5";
      rotation = "0 0 -1 90.0002";
      scale = "1 1 1";
      dataBlock = "EndPadEdge_BM";
   };
   new StaticShape(EndPoint) {
      position = "40 74 34.5";
      rotation = "1 0 0 0";
      scale = "1 1 1";
      dataBlock = "EndPad_BM";
   };
   new TSStatic() {
      position = "86 5 25.85";
      rotation = "1 0 0 0";
      scale = "0.7 0.7 0.7";
      shapeName = "~/data/shapes_bm/signs/bm_checkpointsign.dts";
   };
   new TSStatic() {
      position = "40 74 38.35";
      rotation = "0 0 1 90.0002";
      scale = "0.7 0.7 0.7";
      shapeName = "~/data/shapes_bm/signs/bm_finishsign.dts";
   };
   new Item() {
      position = "-9 49 4";
      rotation = "0 0 1 90.0002";
      scale = "2 1 1";
      dataBlock = "SuperSpeedItem_BMGate";
      collideable = "0";
      static = "1";
      rotate = "0";
         noRespawn = "0";
         showHelpOnPickup = "0";
   };
   new TSStatic() {
      position = "-9 48 4";
      rotation = "0 0 -1 90.0002";
      scale = "1 1 1";
      shapeName = "~/data/shapes_bm/powerups/GateCorner_bm.dts";
   };
   new TSStatic() {
      position = "-9 48.95 4";
      rotation = "0 0 -1 90.0002";
      scale = "1 1 1";
      shapeName = "~/data/shapes_bm/powerups/SuperSpeedGate_icon_bm.dts";
   };
   new TSStatic() {
      position = "87.05 -19 25.625";
      rotation = "0 0 1 180";
      scale = "1 1 1";
      shapeName = "~/data/shapes_bm/powerups/SuperSpeedGate_icon_bm.dts";
   };
   new TSStatic() {
      position = "86 -19 25.625";
      rotation = "0.707108 8.96324e-007 -0.707106 180";
      scale = "1 1 1";
      shapeName = "~/data/shapes_bm/powerups/GateCorner_bm.dts";
   };
   new Item() {
      position = "87 -19 25.625";
      rotation = "1 0 0 0";
      scale = "2 1 1";
      dataBlock = "SuperSpeedItem_BMGate";
      collideable = "0";
      static = "1";
      rotate = "0";
         noRespawn = "0";
         showHelpOnPickup = "0";
   };
   new Item() {
      position = "-2.75 26.75 10";
      rotation = "0 0 1 90.0002";
      scale = "0.6 0.6 0.6";
      dataBlock = "TimeTravelItem_BM";
      collideable = "0";
      static = "1";
      rotate = "1";
         noRespawn = "0";
         skin = "3";
         timeBonus = "3000";
   };
   new Item() {
      position = "64.75 -12.75 31.375";
      rotation = "1 0 0 0";
      scale = "0.6 0.6 0.6";
      dataBlock = "TimeTravelItem_BM";
      collideable = "0";
      static = "1";
      rotate = "1";
         noRespawn = "0";
         skin = "3";
         timeBonus = "3000";
   };
};
//--- OBJECT WRITE END ---
